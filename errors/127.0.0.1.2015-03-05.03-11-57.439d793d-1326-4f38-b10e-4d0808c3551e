(dp1
S'output'
p2
S"<class 'urllib2.URLError'> <urlopen error [Errno 65] No route to host>"
p3
sS'layer'
p4
S'/Users/logyuan/Documents/web2py/applications/fbBrt/controllers/newsAPI.py'
p5
sS'code'
p6
S'# coding: utf8\n# try something like\nimport urllib\nimport json\nimport dateutil\nimport datetime\nimport string\nimport re\nimport itertools\nfrom collections import Counter\nfrom collections import OrderedDict\nfrom dateutil import parser\nfrom datetime import timedelta\nimport jieba\nimport jieba.analyse\nimport jieba.posseg as pseg\nfrom snownlp import SnowNLP\nfrom snownlp import sentiment\nfrom datetime import timedelta\nfrom operator import itemgetter\nimport codecs\nimport os\n\n#pos_train = os.path.join(request.folder,\'private\',\'dictionary\',\'pos.txt\')\n#nag_train = os.path.join(request.folder,\'private\',\'dictionary\',\'nag.txt\')\n#sentiment.train(pos_train, nag_train)\n\n#sentiment.save(os.path.join(request.folder,\'private\',\'sentiment.marshal\'))\n# sentiment.train(\'/usr/local/lib/python2.7/site-packages/snownlp/sentiment/blue.txt\', \'/usr/local/lib/python2.7/site-packages/snownlp/sentiment/green.txt\')\n#sentiment.save(\'/usr/local/lib/python2.7/site-packages/snownlp/sentiment/sentiment.marshal\')\n\n\ndictionary_path = os.path.join(request.folder,\'private\',\'dictionary\',\'dict.txt.big.txt\')\nuserdict_path = os.path.join(request.folder,\'private\',\'dictionary\',\'userdict.txt\')\nstopwords_path = os.path.join(request.folder,\'private\',\'dictionary\',\'stop_words.txt\')\nidf_path = os.path.join(request.folder,\'private\',\'dictionary\',\'idf.txt.big.txt\')\n\njieba.set_dictionary(dictionary_path)\njieba.load_userdict(userdict_path)\njieba.analyse.set_stop_words(stopwords_path)\njieba.analyse.set_idf_path(idf_path)\n\nstopwords_file = open(stopwords_path, \'r\')\nstopwords = [unicode(line.strip(\'\\n\'), "utf-8") for line in stopwords_file.readlines()]\n\n\n#jieba.initialize()\n\n\ndelEnStr = string.punctuation + \' \' + string.digits\ndelZhStr = u\'\xe3\x80\x8a\xe3\x80\x8b\xef\xbc\x88\xef\xbc\x89&%\xef\xbf\xa5#@\xef\xbc\x81{}\xe3\x80\x90\xe3\x80\x91\xe3\x80\x8c\xe3\x80\x8d\xe3\x80\x8e\xe3\x80\x8f\xef\xbc\x9f\xef\xbd\x9c\xef\xbc\x8c\xe3\x80\x81\xe3\x80\x82\xef\xbc\x9a\xef\xbc\x9b\xe4\xb8\xb6\xef\xbd\x9e\xe3\x80\x80\' + delEnStr.encode(\'utf8\')\n\n\ndef index():\n    started_time = datetime.datetime.now()\n    Brtnews24_url = "https://www.kimonolabs.com/api/47bg0pfm?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    Brtnews7days_url = "https://www.kimonolabs.com/api/ajldjyxq?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    Brtnews30days_url = "https://www.kimonolabs.com/api/5xnus1ws?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    Brtnews1year_url = "https://www.kimonolabs.com/api/d1shcaww?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    kimono_api(Brtnews7days_url, "BRT")\n    \n\n    mayor24_url = "https://www.kimonolabs.com/api/7br3eu62?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    mayor7days_url = "https://www.kimonolabs.com/api/863lok12?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    mayor30days_url = "https://www.kimonolabs.com/api/8h259vhq?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    mayor1year_url = "https://www.kimonolabs.com/api/cs5dtbm0?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    #kimono_api(mayor1year_url, "\xe6\x9e\x97\xe4\xbd\xb3\xe9\xbe\x8d")\n\n    today = datetime.datetime.today()\n    date = today - timedelta(days=3)\n    fromdate = datetime.datetime.strftime(date, "%Y/%m/%d")\n    todate = datetime.datetime.strftime(today, "%Y/%m/%d")\n    #checkDBNewsComments()\n    #checkDBNewsCommentsFromDate(fromdate)\n    ended_time = datetime.datetime.now()\n    fbdb.event_logs.insert(function=\'kimono_api\', started_time=started_time, ended_time=ended_time)\n    fbdb.commit()\n    started_time = datetime.datetime.now()\n    Socialcount()\n    ended_time = datetime.datetime.now()\n    fbdb.event_logs.insert(function=\'updateSocialcount\', started_time=started_time, ended_time=ended_time)\n    fbdb.commit()\n    started_time = datetime.datetime.now()\n    checkDBNewsComments()\n    ended_time = datetime.datetime.now()\n    fbdb.event_logs.insert(function=\'checkDBNewsComments\', started_time=started_time, ended_time=ended_time)\n    fbdb.commit()\n\n\n\n\n    return "OK"\n\ndef test():\n    result=convertNewsComms(\'812216578849978_812222405516062\')\n    return result\n    #return response.json(get_og_url(\'http://news.ltn.com.tw/news/opinion/breakingnews/1222089\'))\n\ndef test2():\n    # started_time = datetime.datetime.now()\n    newsbrt = NewsGroup(\'BRT\')\n    # newsbrt.updateAllSocialCount()\n    # ended_time = datetime.datetime.now()\n    # fbdb.event_logs.insert(function=\'updateAllSocialCount\', started_time=started_time, ended_time=ended_time)\n    # fbdb.commit()\n    started_time = datetime.datetime.now()\n    newsbrt.updateAllComments()\n    ended_time = datetime.datetime.now()\n    fbdb.event_logs.insert(function=\'updateAllComments\', started_time=started_time, ended_time=ended_time)\n    fbdb.commit()\n    #test5=getGroupUrlsSocialCount("http://udn.com/news/story/7548/677801,http://news.ltn.com.tw/news/local/paper/852017,http://www.chinatimes.com/newspapers/20150223000068-260210,http://www.appledaily.com.tw/realtimenews/article/new/20150112/540406/,http://www.chinatimes.com/realtimenews/20150223002434-260405")\n    #return str(test5)\n    #newsbrt = NewsGroup(\'BRT\')\n    #return newsbrt.url_list\n\n\ndef commentsByKeywords():\n    key = \'%\xe5\xa5\xb3\xe6\x80\xa7%\'\n    rows = fbdb(fbdb.news.summary.like(key)).select()\n    newslist = []\n    for row in rows:\n        if row["fid"] != None:\n            newslist.append(row["fid"])\n    rows = fbdb(fbdb.news_comments.news_fid.belongs(newslist)).select()\n    comments = []\n    likes = []\n    for row in rows:\n        if row["like_count"] > 10:\n            news = fbdb(fbdb.news.fid == row["news_fid"]).select().first()\n            comments.append(\'news_title:\' + row["news_fid"] + news["title"] + \' like_count:\' + str(\n                row["like_count"]) + \' message: \' + row["message"])\n            likes.append(row["like_count"])\n    likes, comments = [list(x) for x in zip(*sorted(zip(likes, comments), key=itemgetter(0), reverse=True))]\n\n    return dict(comments=comments)\n\n@auth.requires_login()\ndef Socialcount():\n    newsbrt = NewsGroup(\'BRT\')\n    newsbrt.updateAllSocialCount()\n\n    return \'OK\'\n\ndef fix_url():\n    rows = fbdb(fbdb.news_comments.news_fid == None).select()\n    for row in rows:\n        fid = row["fid"]\n        news_fid = fid.split(\'_\')[0]\n        #url = "http://" + urllib.quote(href.split("http://")[1])\n        #og = get_og_url(url)\n        #fid = og["fid"]\n        #fb_url = og["fb_url"]\n\n        row.update_record(news_fid=news_fid)\n\n@auth.requires_login()\ndef update_socialcount():\n    rows = fbdb(fbdb.news.fid <> None).select()\n    test=[]\n    for row in rows:\n        news_object = News(row.href)\n        test.append(news_object.fb_url)\n        news_object.updateSocialCount()\n        \n\n    return test\n\ndef fix_seg():\n    rows = fbdb(fbdb.news_comments.id <> \'\').select()\n    for row in rows:\n        message = row["message"]\n        segment = list(jieba.cut(message))\n        row.update_record(segment=segment)\n\n\ndef kimono_api(url, from_team):\n    response = urllib.urlopen(url)\n    data = json.load(response)\n    updatedtime = parser.parse(data["lastsuccess"]) + timedelta(hours=8)\n    news_array = data["results"]["collection1"]\n    for news in news_array:\n        date_time = news["datetime"]\n        if u\' \xe5\xb0\x8f\xe6\x99\x82\xe5\x89\x8d\' in date_time:\n            hours = int(date_time.strip(u\' \xe5\xb0\x8f\xe6\x99\x82\xe5\x89\x8d\'))\n            date_time = updatedtime - timedelta(hours=hours)\n        elif u\' \xe5\x88\x86\xe9\x90\x98\xe5\x89\x8d\' in date_time:\n            minutes = int(date_time.strip(u\' \xe5\x88\x86\xe9\x90\x98\xe5\x89\x8d\'))\n            date_time = updatedtime - timedelta(minutes=minutes)\n        else:\n            date_time = date_time.replace(u\'\xe5\xb9\xb4\', \'/\').replace(u\'\xe6\x9c\x88\', \'/\').strip(u\'\xe6\x97\xa5\')\n            date_time = parser.parse(date_time) + timedelta(hours=12)\n\n        source = news["source"]\n        summary = news["summary"]\n        title = news["title"]["text"]\n        href = news["title"]["href"]\n        photo = news["photo"]["src"] if \'src\' in news["photo"] else \'\'\n\n        related_news = []\n        related_news_date_time = []\n        related_news_source = []\n\n        # if isinstance(news["related_news_datetime"], list):\n        #     for item in news["related_news_datetime"]:\n        #         if u\' \xe5\xb0\x8f\xe6\x99\x82\xe5\x89\x8d\' in item:\n        #             hours = int(item.strip(u\' \xe5\xb0\x8f\xe6\x99\x82\xe5\x89\x8d\'))\n        #             item = updated_time - timedelta(hours=hours)\n        #             related_news_date_time.append(item)\n        #         elif u\' \xe5\x88\x86\xe9\x90\x98\xe5\x89\x8d\' in item:\n        #             minutes = int(item.strip(u\' \xe5\x88\x86\xe9\x90\x98\xe5\x89\x8d\'))\n        #             item = updated_time - timedelta(minutes=minutes)\n        #             related_news_date_time.append(item)\n        #         else:\n        #             item = item.replace(u\'\xe5\xb9\xb4\', \'/\').replace(u\'\xe6\x9c\x88\', \'/\').strip(u\'\xe6\x97\xa5\')\n        #             item = parser.parse(item) + timedelta(hours=12)\n        #             related_news_date_time.append(item)\n        #     related_news = news["related_news"]\n        #     related_news_source = news["related_news_source"]\n        # elif news["related_news_datetime"] == "":\n        #     pass\n        # else:\n        #     if u\' \xe5\xb0\x8f\xe6\x99\x82\xe5\x89\x8d\' in news["related_news_datetime"]:\n        #         hours = int(news["related_news_datetime"].strip(u\' \xe5\xb0\x8f\xe6\x99\x82\xe5\x89\x8d\'))\n        #         related_news_date_time2 = updated_time - timedelta(hours=hours)\n        #     elif u\' \xe5\x88\x86\xe9\x90\x98\xe5\x89\x8d\' in news["related_news_datetime"]:\n        #         minutes = int(news["related_news_datetime"].strip(u\' \xe5\x88\x86\xe9\x90\x98\xe5\x89\x8d\'))\n        #         related_news_date_time2 = updated_time - timedelta(minutes=minutes)\n        #     else:\n        #         related_news_date_time2 = news["related_news_datetime"].replace(u\'\xe5\xb9\xb4\', \'/\').replace(u\'\xe6\x9c\x88\', \'/\').strip(\n        #             u\'\xe6\x97\xa5\')\n        #         related_news_date_time2 = parser.parse(related_news_date_time2) + timedelta(hours=12)\n        #\n        #     related_news.append(news["related_news"])\n        #     related_news_date_time.append(related_news_date_time2)\n        #     related_news_source.append(news["related_news_source"])\n        if href != \'\':\n            #url = "http://" + urllib.quote(href.split("http://")[1])\n            href = href.strip()\n            url2 = href.split("://")[0] + "://" + urllib.quote(href.split("://")[1])\n            og = get_og_url(url2)\n            # fid = og["fid"]\n            # fb_url = og["fb_url"]\n            # created_time = og["created_time"]\n            # updated_time = og["updated_time"]\n            # share_count = og["share_count"]\n            # comment_count = og["comment_count"]\n            if og["title"] == None:\n                og["title"] = title\n            fbdb.news.update_or_insert(fbdb.news.href==href,from_team=from_team, href=href,summary=summary, source=source, date_time=date_time,  **og)\n            # fbdb.news.update_or_insert(fbdb.news.href==href, fb_url=fb_url, href=href, created_time=created_time,updated_time=updated_time, date_time=date_time, source=source, summary=summary, title=title, photo=photo, related_news=json.dumps(related_news),\n            #                  related_news_date_time=related_news_date_time,\n            #                  related_news_source=json.dumps(related_news_source), from_team=from_team,\n            #                  share_count=share_count, comment_count=comment_count)\n            fbdb.commit()\n\n                #getUrlSocialCount(fb_url)\n\n    return json.dumps(data)\n    #return "Success!"\n    #return dict(message="hello from newsAPI.py")\n\ndef checkDBNewsCommentsFromDate(from_date):\n    from_date = datetime.datetime.strptime(from_date, "%Y/%m/%d")\n    rows = fbdb(fbdb.news.date_time >= from_date).select()\n    for row in rows:\n        ids = row["fid"]\n        if ids != None:\n            #ids = "http://" + urllib.quote(ids.split("http://")[1])\n            from_team = row["from_team"]\n            news_source = row["source"]\n            getNewsComments(ids, from_team, news_source)\n\n@auth.requires_login()\ndef checkDBNewsComments():\n    rows = fbdb((fbdb.news.fid <> None) & (fbdb.news.comment_count > 0)).select()  #\n    for row in rows:\n        ids = row["fid"]\n        href = row["href"]\n        if ids != None:\n            #ids = "http://" + urllib.quote(ids.split("http://")[1])\n            from_team = row["from_team"]\n            news_source = row["source"]\n            getNewsComments(ids, from_team, news_source, href)\n\n    return "Ok"\n\ndef BestComments():\n    stoplist = list(delZhStr)\n    stoplist.extend(stopwords)\n    p_wordclouds = []\n    p_wordcloud = []\n    p_wordclouds2 = []\n\n    male_wordcloud = []\n    female_wordcloud = []\n\n    male_wordclouds = []\n    male_wordclouds_a = []\n    male_wordclouds_n = []\n    male_wordclouds_nr = []\n    male_wordclouds_v = []\n\n    female_wordclouds = []\n    female_wordclouds_a = []\n    female_wordclouds_n = []\n    female_wordclouds_nr = []\n    female_wordclouds_v = []\n\n    male_wordcloud_a = []\n    male_wordcloud_n = []\n    male_wordcloud_nr = []\n    male_wordcloud_v = []\n\n    female_wordcloud_a = []\n    female_wordcloud_n = []\n    female_wordcloud_nr = []\n    female_wordcloud_v = []\n\n    wordcloud_a = []\n    wordcloud_n = []\n    wordcloud_nr = []\n    wordcloud_v = []\n    wordcloud_a2 = []\n    wordcloud_n2 = []\n    wordcloud_nr2 = []\n    wordcloud_v2 = []\n\n    now = datetime.datetime.today()\n    q_time = now - timedelta(days=7)\n    #rows = fbdb((fbdb.news_comments.like_count >= 1)&(fbdb.news_comments.from_team==\'\xe9\x80\xa3\xe5\x8b\x9d\xe6\x96\x87\')&(fbdb.news_comments.created_time >=q_time)).select()\n    rows = fbdb(fbdb.news_comments.id <> \'\').select()\n    for row in rows:\n        #segments = list(set(row[\'segment\']))\n        segments = pseg.cut(row[\'message\'])\n        count = row["like_count"]  #// 10\n        #count= 1\n        wordclouds_a = []\n        wordclouds_n = []\n        wordclouds_nr = []\n        wordclouds_v = []\n        for j in range(0, count):\n            for i in segments:\n                if (i.word not in stoplist):\n                    p_wordclouds2.append(i.word)\n                if (re.search("^a", i.flag) <> None) & (i.word not in stoplist):\n                    wordclouds_a.append(i.word)\n                elif (i.flag == \'n\') & (i.word not in stoplist):\n                    wordclouds_n.append(i.word)\n                elif (i.flag == \'nr\') & (i.word not in stoplist):\n                    wordclouds_nr.append(i.word)\n                elif (re.search("^v", i.flag) <> None) & (i.word not in stoplist):\n                    wordclouds_v.append(i.word)\n        p_wordclouds.extend(p_wordclouds2)\n        userid = row["from_id"]\n        user = fbdb(fbdb.people.uid == userid).select().first()\n        sex = user[\'gender\'] if user else None\n        #likes = row[\'likes\'] if ((\'likes\' in row) & (row[\'likes\'] != None) & (row[\'likes\'] != {})) else []\n        #for like in likes:\n        wordcloud_a2.extend(list(set(wordclouds_a)))\n        wordcloud_n2.extend(list(set(wordclouds_n)))\n        wordcloud_nr2.extend(list(set(wordclouds_nr)))\n        wordcloud_v2.extend(list(set(wordclouds_v)))\n\n        if sex == \'female\':\n            female_wordclouds.extend(list(set(p_wordclouds2)))\n            female_wordclouds_a.extend(list(set(wordclouds_a)))\n            female_wordclouds_n.extend(list(set(wordclouds_n)))\n            female_wordclouds_nr.extend(list(set(wordclouds_nr)))\n            female_wordclouds_v.extend(list(set(wordclouds_v)))\n        elif sex == \'male\':\n            male_wordclouds.extend(list(set(p_wordclouds2)))\n            male_wordclouds_a.extend(list(set(wordclouds_a)))\n            male_wordclouds_n.extend(list(set(wordclouds_n)))\n            male_wordclouds_nr.extend(list(set(wordclouds_nr)))\n            male_wordclouds_v.extend(list(set(wordclouds_v)))\n        else:\n            pass\n    for item in Counter(wordcloud_a2).most_common(150):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        wordcloud_a.append({\'name\': item[0], \'size\': item[1]})\n    for item in Counter(wordcloud_n2).most_common(150):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        wordcloud_n.append({\'name\': item[0], \'size\': item[1]})\n    for item in Counter(wordcloud_nr2).most_common(150):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        wordcloud_nr.append({\'name\': item[0], \'size\': item[1]})\n    for item in Counter(wordcloud_v2).most_common(150):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        wordcloud_v.append({\'name\': item[0], \'size\': item[1]})\n\n    for item in Counter(female_wordclouds).most_common(150):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        female_wordcloud.append({\'name\': item[0], \'size\': item[1]})\n    for item in Counter(male_wordclouds).most_common(150):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        male_wordcloud.append({\'name\': item[0], \'size\': item[1]})\n\n    list_a_female100 = []\n    list_n_female100 = []\n    list_nr_female100 = []\n    list_v_female100 = []\n\n    for item in Counter(female_wordclouds_a).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        female_wordcloud_a.append({\'name\': item[0], \'size\': item[1]})\n        list_a_female100.append(item[0])\n\n    for item in Counter(female_wordclouds_n).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        female_wordcloud_n.append({\'name\': item[0], \'size\': item[1]})\n        list_n_female100.append(item[0])\n\n    for item in Counter(female_wordclouds_nr).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        female_wordcloud_nr.append({\'name\': item[0], \'size\': item[1]})\n        list_nr_female100.append(item[0])\n\n    for item in Counter(female_wordclouds_v).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        female_wordcloud_v.append({\'name\': item[0], \'size\': item[1]})\n        list_v_female100.append(item[0])\n\n    list_a_male100 = []\n    list_n_male100 = []\n    list_nr_male100 = []\n    list_v_male100 = []\n\n    for item in Counter(male_wordclouds_a).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        male_wordcloud_a.append({\'name\': item[0], \'size\': item[1]})\n        list_a_male100.append(item[0])\n\n    for item in Counter(male_wordclouds_n).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        male_wordcloud_n.append({\'name\': item[0], \'size\': item[1]})\n        list_n_male100.append(item[0])\n\n    for item in Counter(male_wordclouds_nr).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        male_wordcloud_nr.append({\'name\': item[0], \'size\': item[1]})\n        list_nr_male100.append(item[0])\n\n    for item in Counter(male_wordclouds_v).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        male_wordcloud_v.append({\'name\': item[0], \'size\': item[1]})\n        list_v_male100.append(item[0])\n\n    female_wordcloud_a_special = []\n    female_wordcloud_n_special = []\n    female_wordcloud_nr_special = []\n    female_wordcloud_v_special = []\n\n    for item in Counter(female_wordclouds_a).most_common(100):\n        if item[0] not in list_a_male100:\n            female_wordcloud_a_special.append({\'name\': item[0], \'size\': item[1]})\n\n    for item in Counter(female_wordclouds_n).most_common(100):\n        if item[0] not in list_n_male100:\n            female_wordcloud_n_special.append({\'name\': item[0], \'size\': item[1]})\n\n    for item in Counter(female_wordclouds_nr).most_common(100):\n        if item[0] not in list_nr_male100:\n            female_wordcloud_nr_special.append({\'name\': item[0], \'size\': item[1]})\n\n    for item in Counter(female_wordclouds_v).most_common(100):\n        if item[0] not in list_v_male100:\n            female_wordcloud_v_special.append({\'name\': item[0], \'size\': item[1]})\n\n    male_wordcloud_a_special = []\n    male_wordcloud_n_special = []\n    male_wordcloud_nr_special = []\n    male_wordcloud_v_special = []\n\n    for item in Counter(male_wordclouds_a).most_common(100):\n        if item[0] not in list_a_female100:\n            male_wordcloud_a_special.append({\'name\': item[0], \'size\': item[1]})\n\n    for item in Counter(male_wordclouds_n).most_common(100):\n        if item[0] not in list_n_female100:\n            male_wordcloud_n_special.append({\'name\': item[0], \'size\': item[1]})\n\n    for item in Counter(male_wordclouds_nr).most_common(100):\n        if item[0] not in list_nr_female100:\n            male_wordcloud_nr_special.append({\'name\': item[0], \'size\': item[1]})\n\n    for item in Counter(male_wordclouds_v).most_common(100):\n        if item[0] not in list_v_female100:\n            male_wordcloud_v_special.append({\'name\': item[0], \'size\': item[1]})\n\n    flare = {}\n    flare = {"name": "flare", "children": [{"name": "female_wordcloud",\n                                            "children": [{"name": "adj", "children": female_wordcloud_a_special},\n                                                         {"name": "v", "children": female_wordcloud_v_special},\n                                                         {"name": "nr", "children": female_wordcloud_nr_special},\n                                                         {"name": "n", "children": female_wordcloud_n_special}]}]}\n\n    f = open(os.path.join(request.folder,\'private\',\'d3\',\'BestComments_female.json\'), \'w+\')\n    f.write(json.dumps(flare, sort_keys=False, separators=(\',\', \':\'), indent=4))\n    f.close()\n    flare = {}\n    flare = {"name": "flare", "children": [{"name": "male_wordcloud",\n                                            "children": [{"name": "adj", "children": male_wordcloud_a_special},\n                                                         {"name": "v", "children": male_wordcloud_v_special},\n                                                         {"name": "nr", "children": male_wordcloud_nr_special},\n                                                         {"name": "n", "children": male_wordcloud_n_special}]}]}\n    f = open(os.path.join(request.folder,\'private\',\'d3\',\'BestComments_male.json\'), \'w+\')\n    f.write(json.dumps(flare, sort_keys=False, separators=(\',\', \':\'), indent=4))\n    f.close()\n\n    flare = {}\n    flare = {"name": "flare", "children": [{"name": "wordcloud", "children": [{"name": "adj", "children": wordcloud_a},\n                                                                              {"name": "v", "children": wordcloud_v},\n                                                                              {"name": "nr", "children": wordcloud_nr},\n                                                                              {"name": "n", "children": wordcloud_n}]}]}\n    f = open(os.path.join(request.folder,\'private\',\'d3\',\'BestComments.json\'), \'w+\')\n    f.write(json.dumps(flare, sort_keys=False, separators=(\',\', \':\'), indent=4))\n    f.close()\n\n    f = codecs.open(os.path.join(request.folder,\'private\',\'d3\',\'wordcloud.txt\'), \'w+\', \'utf-8\')\n    for item in list(set(p_wordclouds)):\n        f.write(item + \'\\n\')\n    f.close()\n\n    return dict(message="OK")\n    #return len(rows)\n    #return json.dumps(female_wordclouds_nr)\n\ndef ConvertComments():\n    rows = fbdb(fbdb.news_comments.comments <> None).select()  #\n    for row in rows:\n        convertNewsComms(row["fid"])\n\ndef delay():\n    time.sleep(1.5)\n\nresponse._vars=response._caller(test2)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'urllib2'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of URLError object>"
p15
sS'__str__'
p16
S"<bound method URLError.__str__ of URLError(error(65, 'No route to host'),)>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of URLError object>'
p19
sS'__dict__'
p20
S"{'reason': error(65, 'No route to host')}"
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of URLError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<bound method URLError.__init__ of URLError(error(65, 'No route to host'),)>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of URLError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of URLError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'errno'
p34
S'None'
p35
sS'__format__'
p36
S'<built-in method __format__ of URLError object>'
p37
sS'__class__'
p38
S"<class 'urllib2.URLError'>"
p39
sS'filename'
p40
S'None'
p41
sS'__doc__'
p42
S'None'
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of URLError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of URLError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of URLError object>"
p49
sS'args'
p50
S"(error(65, 'No route to host'),)"
p51
sS'reason'
p52
S"error(65, 'No route to host')"
p53
sS'__subclasshook__'
p54
S'<built-in method __subclasshook__ of type object>'
p55
sS'__unicode__'
p56
S'<built-in method __unicode__ of URLError object>'
p57
sS'strerror'
p58
S'None'
p59
sS'__delattr__'
p60
S"<method-wrapper '__delattr__' of URLError object>"
p61
sS'__repr__'
p62
S"<method-wrapper '__repr__' of URLError object>"
p63
sS'__hash__'
p64
S"<method-wrapper '__hash__' of URLError object>"
p65
ssS'evalue'
p66
S'<urlopen error [Errno 65] No route to host>'
p67
sS'request'
p68
cgluon.html
XML_unpickle
p69
(S's\x82W\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>fbBrt</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>newsAPI</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-72742256-c2fd-4ea6-a572-faf474b26db1<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_fbbrt</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-bf888576-794f-4889-ae58-051e54aa14cc<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-us</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_admin=127.0.0.1-72742256-c2fd-4ea6-a572-faf474b26db1; session_id_fbbrt=127.0.0.1-bf888576-794f-4889-ae58-051e54aa14cc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>localhost:8088</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/600.3.18 (KHTML, like Gecko) Version/8.0.3 Safari/600.3.18</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/fbBrt/newsAPI/test2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>57801</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>maclogair.local</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8088</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Users/logyuan/Documents/web2py/applications/fbBrt/&#x27;, &#x27;/Users/logyuan/Documents/web2py/applications/fbbrt/&#x27;, &#x27;/Users/logyuan/Documents/web2py/applications/admin/&#x27;, &#x27;/Users/logyuan/Documents/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/logyuan/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x10c7044d0: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;192.168.2.1&#x27;, &#x27;192.168.4.29&#x27;, &#x27;172.20.10.4&#x27;, &#x27;fe80::40c:ceff:fe3e:b700%bridge0&#x27;, &#x27;fe80::60c:ceff:fee3:df4a%en0&#x27;, &#x27;fe80::34a3:95ff:fec7:ca59%en3&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;maclogair.local&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Users/logyuan/Documents/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/logyuan/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-us</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_admin=127.0.0.1-72742256-c2fd-4ea6-a572-faf474b26db1; session_id_fbbrt=127.0.0.1-bf888576-794f-4889-ae58-051e54aa14cc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>localhost:8088</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/600.3.18 (KHTML, like Gecko) Version/8.0.3 Safari/600.3.18</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>192.168.2.1</div></td></tr><tr><td><div>192.168.4.29</div></td></tr><tr><td><div>172.20.10.4</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>fe80::60c:ceff:fee3:df4a%en0</div></td></tr><tr><td><div>fe80::40c:ceff:fe3e:b700%bridge0</div></td></tr><tr><td><div>maclogair.local</div></td></tr><tr><td><div>fe80::34a3:95ff:fec7:ca59%en3</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/fbBrt/newsAPI/test2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>57801</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/fbBrt/newsAPI/test2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>maclogair.local</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8088</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/Users/logyuan/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.5-stable+timestamp.2014.03.20.22.57.13</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x10b31b1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x10c68d870&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x160f17050&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x10b31b1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x10c68d870&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x160f17050&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/Users/logyuan/Documents/web2py/applications/fbBrt/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>test2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Users/logyuan/Documents/web2py/applications/fbBrt/&#x27;, &#x27;/Users/logyuan/Documents/web2py/applications/fbbrt/&#x27;, &#x27;/Users/logyuan/Documents/web2py/applications/admin/&#x27;, &#x27;/Users/logyuan/Documents/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/logyuan/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x10c7044d0: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;192.168.2.1&#x27;, &#x27;192.168.4.29&#x27;, &#x27;172.20.10.4&#x27;, &#x27;fe80::40c:ceff:fe3e:b700%bridge0&#x27;, &#x27;fe80::60c:ceff:fee3:df4a%en0&#x27;, &#x27;fe80::34a3:95ff:fec7:ca59%en3&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;maclogair.local&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Users/logyuan/Documents/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/logyuan/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>192.168.2.1</div></td></tr><tr><td><div>192.168.4.29</div></td></tr><tr><td><div>172.20.10.4</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>fe80::60c:ceff:fee3:df4a%en0</div></td></tr><tr><td><div>fe80::40c:ceff:fe3e:b700%bridge0</div></td></tr><tr><td><div>maclogair.local</div></td></tr><tr><td><div>fe80::34a3:95ff:fec7:ca59%en3</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.5-stable+timestamp.2014.03.20.22.57.13</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 3, 5, 3, 11, 57, 668203)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/fbBrt/newsAPI/test2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 3, 4, 19, 11, 57, 668214)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>fbBrt/127.0.0.1.2015-03-05.03-11-57.439d793d-1326-4f38-b10e-4d0808c3551e</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x162808b10&gt;</div></td></tr></table></div>'
tRp70
sS'frames'
p71
(lp72
(dp73
S'file'
p74
S'/Users/logyuan/Documents/web2py/gluon/restricted.py'
p75
sS'dump'
p76
(dp77
S'environment'
p78
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'BestComments': <function BestComments>, 'CAT': <class 'gluon.html.CAT'>, ...}"
p79
sS'ccode'
p80
S'<code object <module> at 0x12b13e9b0, file "/Use...plications/fbBrt/controllers/newsAPI.py", line 3>'
p81
ssS'lnum'
p82
I220
sS'lines'
p83
(dp84
I224
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p85
sI215
S'    try:'
p86
sI216
S'        if isinstance(code, types.CodeType):'
p87
sI217
S'            ccode = code'
p88
sI218
S'        else:'
p89
sI219
S'            ccode = compile2(code, layer)'
p90
sI220
S'        exec ccode in environment'
p91
sI221
S'    except HTTP:'
p92
sI222
S'        raise'
p93
sI223
S'    except RestrictedError:'
p94
ssS'call'
p95
S"(code='# coding: utf8\\n# try something like\\nimport urlli...eep(1.5)\\n\\nresponse._vars=response._caller(test2)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'BestComments': <function BestComments>, 'CAT': <class 'gluon.html.CAT'>, ...}, layer='/Users/logyuan/Documents/web2py/applications/fbBrt/controllers/newsAPI.py')"
p96
sS'func'
p97
S'restricted'
p98
sa(dp99
g74
S'/Users/logyuan/Documents/web2py/applications/fbBrt/controllers/newsAPI.py'
p100
sg76
(dp101
sg82
I536
sg83
(dp102
I525
S'    #return len(rows)'
p103
sI526
S'    #return json.dumps(female_wordclouds_nr)'
p104
sI527
S''
sI528
S'def ConvertComments():'
p105
sI529
S'    rows = fbdb(fbdb.news_comments.comments <> None).select()  #'
p106
sI530
S'    for row in rows:'
p107
sI531
S'        convertNewsComms(row["fid"])'
p108
sI532
S''
sI533
S'def delay():'
p109
sI534
S'    time.sleep(1.5)'
p110
ssg95
S'()'
p111
sg97
S'<module>'
p112
sa(dp113
g74
S'/Users/logyuan/Documents/web2py/gluon/globals.py'
p114
sg76
(dp115
S'self'
p116
S'undefined'
p117
sS'f'
S'<function test2>'
p118
ssg82
I385
sg83
(dp119
I384
S'        self._vars = None'
p120
sI385
S'        self._caller = lambda f: f()'
p121
sI386
S'        self._view_environment = None'
p122
sI387
S'        self._custom_commit = None'
p123
sI388
S'        self._custom_rollback = None'
p124
sI389
S''
sI380
S'        self.menu = []             # used by the default view layout'
p125
sI381
S'        self.files = []            # used by web2py_ajax.html'
p126
sI382
S'        self.generic_patterns = []  # patterns to allow generic views'
p127
sI383
S"        self.delimiters = ('{{', '}}')"
p128
ssg95
S'(f=<function test2>)'
p129
sg97
S'<lambda>'
p130
sa(dp131
g74
S'/Users/logyuan/Documents/web2py/applications/fbBrt/controllers/newsAPI.py'
p132
sg76
(dp133
S'newsbrt.updateAllComments'
p134
S'<bound method NewsGroup.updateAllComments of <__restricted__.NewsGroup instance>>'
p135
sS'newsbrt'
p136
S'<__restricted__.NewsGroup instance>'
p137
ssg82
I107
sg83
(dp138
I102
S'    # newsbrt.updateAllSocialCount()'
p139
sI103
S'    # ended_time = datetime.datetime.now()'
p140
sI104
S"    # fbdb.event_logs.insert(function='updateAllSocialCount', started_time=started_time, ended_time=ended_time)"
p141
sI105
S'    # fbdb.commit()'
p142
sI106
S'    started_time = datetime.datetime.now()'
p143
sI107
S'    newsbrt.updateAllComments()'
p144
sI108
S'    ended_time = datetime.datetime.now()'
p145
sI109
S"    fbdb.event_logs.insert(function='updateAllComments', started_time=started_time, ended_time=ended_time)"
p146
sI110
S'    fbdb.commit()'
p147
sI111
S'    #test5=getGroupUrlsSocialCount("http://udn.com/news/story/7548/677801,http://news.ltn.com.tw/news/local/paper/852017,http://www.chinatimes.com/newspapers/20150223000068-260210,http://www.appledaily.com.tw/realtimenews/article/new/20150112/540406/,http://www.chinatimes.com/realtimenews/20150223002434-260405")'
p148
ssg95
S'()'
p149
sg97
S'test2'
p150
sa(dp151
g74
S'/Users/logyuan/Documents/web2py/applications/fbBrt/models/graph.py'
p152
sg76
(dp153
S'fids'
p154
S"'1016340705062516,600808040019726,920301688010698...4,724865657627709,680501485380396,776344072449017'"
p155
sS'global getGroupNewsComment'
p156
S'<function getGroupNewsComment>'
p157
ssg82
I605
sg83
(dp158
I608
S'        getGroupNewsComment(fids)'
p159
sI609
S'        return None'
p160
sI600
S''
sI601
S'    def updateAllComments(self):'
p161
sI602
S"        fids = ''"
p162
sI603
S'        for fid in self.hasComment_fids_list:'
p163
sI604
S"            if len(fids.split(',')) >=50:"
p164
sI605
S'                getGroupNewsComment(fids)'
p165
sI606
S"                fids = ''"
p166
sI607
S'            fids = fids + \',\' + fid["fid"] if len(fids) <> 0 else fid["fid"]'
p167
ssg95
S'(self=<__restricted__.NewsGroup instance>)'
p168
sg97
S'updateAllComments'
p169
sa(dp170
g74
S'/Users/logyuan/Documents/web2py/applications/fbBrt/models/graph.py'
p171
sg76
(dp172
S'graph'
p173
S'<facebook.GraphAPI object>'
p174
sS'args'
p175
g117
sS'posts'
p176
S"{'data': [{'comment_count': 13, 'comments': {'data': [{'can_remove': False, 'created_time': '2015-01-19T05:19:18+0000', 'from': {...}, 'id': '888863661153948_888874347819546', 'like_count': 58, 'message': u'\\u5e6b\\u6797\\u4f73\\u9f8d\\u88dc\\u5145\\u8aaa\\u66...\\u5be7\\u9858\\u8ce0\\u6b3e\\u4e5f\\u4e0d\\u5272\\u5730', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T05:24:37+0000', 'from': {...}, 'id': '888863661153948_888875971152717', 'like_count': 47, 'message': u'\\u6709\\u554a\\uff0c\\u7092\\u623f\\u7684\\u529f\\u80fd\\u6027\\u61c9\\u8a72\\u4e0d\\u932f\\uff01', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T05:25:52+0000', 'from': {...}, 'id': '888863661153948_888876217819359', 'like_count': 127, 'message': u'\\u8981\\u7576KMT\\u9ad8\\u5b98\\u7684\\u5854\\u4f4d\\u7528\\u7684', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T05:34:54+0000', 'from': {...}, 'id': '888863661153948_888878517819129', 'like_count': 8, 'message': u'\\u99ac\\u6c40 \\u5999\\u7b54^^', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T05:37:41+0000', 'from': {...}, 'id': '888863661153948_888879104485737', 'like_count': 3, 'message': u'\\u7121\\u804a\\u53ef\\u4ee5\\u53bb\\u722c\\u7df4\\u8eab\\u9ad4\\u3002', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T06:00:50+0000', 'from': {...}, 'id': '888863661153948_888884877818493', 'like_count': 43, 'message': u'\\u6211\\u4e0d\\u662f9.2\\uff0c\\u4e0d\\u904e\\u6211\\...\\u706b\\u5834\\u5730\\u7684\\u7d55\\u4f73\\u9078\\u64c7', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T06:01:04+0000', 'from': {...}, 'id': '888863661153948_888884974485150', 'like_count': 5, 'message': u'\\u589e\\u52a0\\u9ee8\\u7522', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T06:34:34+0000', 'from': {...}, 'id': '888863661153948_888892731151041', 'like_count': 28, 'message': u'\\u88e1\\u9762\\u6703\\u6709\\u8aaa\\u66f8\\u4eba\\uff...621099\\u56de\\uff0c\\u6bcf\\u5929\\u4e00\\u76f4\\u8aaa', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T06:52:51+0000', 'from': {...}, 'id': '888863661153948_888897021150612', 'like_count': 7, 'message': u'\\u771f\\u7684\\u89ba\\u5f97\\u6703\\u6210\\u70ba\\u81ea\\u6bba\\u8056\\u5730\\u22ef', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T07:19:54+0000', 'from': {...}, 'id': '888863661153948_888904547816526', 'like_count': 2, 'message': u'0+LN\\u6b64\\u8a71\\u4e00\\u51fa\\u5468\\u908a\\u623f\\u50f9 \\u77ac\\u9593-10%', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T08:09:59+0000', 'from': {...}, 'id': '888863661153948_888925097814471', 'like_count': 17, 'message': u'150\\u5104\\u90fd\\u53ef\\u4ee5\\u84cb\\u4e00\\u689dL...u4eba \\u771f\\u7684\\u662f\\u798d\\u60a3\\u7121\\u7aae', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T16:08:46+0000', 'from': {...}, 'id': '888863661153948_889103247796656', 'like_count': 2, 'message': u'\\u9673\\u79c0\\u6797 \\u4f60\\u5be6\\u5728\\u592a\\u5...u63a5 \\u807d\\u773e\\u61c9\\u8a72\\u4e0d\\u6703\\u5c11', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-20T15:47:40+0000', 'from': {...}, 'id': '888863661153948_889647654408882', 'like_count': 0, 'message': u'\\u5c31\\u662f\\u8981\\u4f86\\u7092\\u5730\\u76ae\\u963f\\uff01', 'user_likes': False}], 'paging': {'cursors': {'after': 'WTI5dGJXVnVkRjlqZFhKemIzSTZPRGc1TmpRM05qVTBOREE0T0RneU9qRTBNakUzTmpnNE5qQT0=', 'before': 'WTI5dGJXVnVkRjlqZFhKemIzSTZPRGc0T0RjME16UTNPREU1TlRRMk9qRTBNakUyTkRRM05UZz0='}}}, 'created_time': '2015-01-19T04:42:54+0000', 'from': {'id': '405526576281112', 'name': 'Zhong-xian Ke'}, 'id': '888863661153948_888865144487133', 'like_count': 147, 'likes': {'data': [{'id': '1602922983270539', 'name': u'\\u674e\\u9708\\u7dba'}, {'id': '973066252718619', 'name': u'\\u9673\\u6625\\u7f8e'}, {'id': '10206039332726049', 'name': 'Jui Chu Chang'}, {'id': '10205379696724291', 'name': 'Amy H. T. Lin'}, {'id': '883401508348475', 'name': u'\\u632f\\u8c6a'}, {'id': '10202816633091887', 'name': u'\\u9673\\u51a0\\u7db8'}, {'id': '953022934709978', 'name': u'Iain \\u67f3\\u6fa4'}, {'id': '10203851031019050', 'name': 'Bulu Chang'}, {'id': '10206461216998692', 'name': 'Laura Nishikido Ryo Chen'}, {'id': '10203413556372570', 'name': 'Kuowei Hsiao'}, {'id': '10153178087999312', 'name': 'Hsin-Chieh Derrick Lin'}, {'id': '828648933862798', 'name': 'Eagie Hades'}, {'id': '939784899365766', 'name': u'\\u76e7\\u6641\\u6bc5'}, {'id': '910139379020299', 'name': 'JianJyun Liao'}, {'id': '779912228753732', 'name': u'\\u65bd\\u9298\\u6e05'}, {'id': '945065908846725', 'name': u'\\u90b1\\u5a01\\u9054'}, {'id': '896144910447544', 'name': 'Masato Nakamura'}, {'id': '1558946364385531', 'name': 'Fuji Hoopee'}, {'id': '874899869238225', 'name': u'\\u9ec3\\u827e\\u746a'}, {'id': '824735680934561', 'name': 'Emily Kuo'}, ...], 'paging': {'cursors': {'after': 'MTU0MzQwMDI2OTI3NTA4Nw==', 'before': 'MTYwMjkyMjk4MzI3MDUzOQ=='}}}, 'message': u'\\u8a71\\u8aaa\\uff11\\uff15\\uff10\\uff25\\u7684\\u53...\\u5f88\\u611f\\u8b1d\\u4f60\\uff0c\\u771f\\u7684\\u3002'}, {'comment_count': 8, 'comments': {'data': [{'can_remove': False, 'created_time': '2015-01-19T04:53:15+0000', 'from': {...}, 'id': '888863661153948_888867817820199', 'like_count': 15, 'message': u'\\u6700\\u4e2d\\u80af\\u3002', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T06:35:25+0000', 'from': {...}, 'id': '888863661153948_888892921151022', 'like_count': 64, 'message': u'\\u84cb\\u500b\\u80e1\\u5fd7\\u5f37\\u5de8\\u50cf\\u59...\\u9806\\u4fbf\\u6539\\u540d\\u80e1\\u5fd7\\u5f37\\u5e02', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T07:01:10+0000', 'from': {...}, 'id': '888863661153948_888899071150407', 'like_count': 29, 'message': u'\\u9673\\u79c0\\u6797 \\u5c0d\\u54c4 \\u9084\\u53ef\\u...8d8a \\u5357 \\u80e1\\u5fd7\\u660e\\u5e02\\u7d50\\u62dc', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T07:51:16+0000', 'from': {...}, 'id': '888863661153948_888921054481542', 'like_count': 5, 'message': u'Pro Chang \\u9019\\u6a23\\u771f\\u7684\\u662f\\u56b4\\u91cd\\u6c59\\u8fb1\\u80e1\\u5fd7\\u660e\\u4e86', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T09:15:42+0000', 'from': {...}, 'id': '888863661153948_888941214479526', 'like_count': 0, 'message': u'\\u9673\\u79c0\\u6797 \\u6211\\u4e0d\\u5141\\u8a31\\u4f60\\u6c59\\u8fb1\\u9ed1\\u8c6c\\u5f37', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T10:30:08+0000', 'from': {...}, 'id': '888863661153948_888958624477785', 'like_count': 1, 'message': u'\\u8ddf\\u4ffa\\u6709\\u540c\\u611f...........', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T13:15:33+0000', 'from': {...}, 'id': '888863661153948_889013817805599', 'like_count': 1, 'message': u'\\u795e\\u56de~', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-20T00:18:18+0000', 'from': {...}, 'id': '888863661153948_889304464443201', 'like_count': 0, 'message': u'\\u59d0\\u59b9\\u5e02', 'user_likes': False}], 'paging': {'cursors': {'after': 'WTI5dGJXVnVkRjlqZFhKemIzSTZPRGc1TXpBME5EWTBORFF6TWpBeE9qRTBNakUzTVRNd09UZz0=', 'before': 'WTI5dGJXVnVkRjlqZFhKemIzSTZPRGc0T0RZM09ERTNPREl3TVRrNU9qRTBNakUyTkRNeE9UVT0='}}}, 'created_time': '2015-01-19T04:49:29+0000', 'from': {'id': '10202970474536483', 'name': 'Ed Ji'}, 'id': '888863661153948_888866804486967', 'like_count': 108, 'likes': {'data': [{'id': '800999639969762', 'name': 'Ting Young'}, {'id': '910139379020299', 'name': 'JianJyun Liao'}, {'id': '328956060637145', 'name': u'\\u7d00\\u5b97\\u5cb3'}, {'id': '10204013630962082', 'name': 'Peichi Ho'}, {'id': '533385453469662', 'name': u'\\u5f35\\u6dd1\\u6167'}, {'id': '1019716061376727', 'name': u'\\u9ec3\\u9a30\\u9707'}, {'id': '948392328512452', 'name': 'Chanel Tseng'}, {'id': '883401508348475', 'name': u'\\u632f\\u8c6a'}, {'id': '10202816633091887', 'name': u'\\u9673\\u51a0\\u7db8'}, {'id': '888700297849276', 'name': 'Xin Yi Shen'}, {'id': '10206461216998692', 'name': 'Laura Nishikido Ryo Chen'}, {'id': '10205718948070651', 'name': 'Hou-Yi Chang'}, {'id': '1045655922114933', 'name': u'\\u8449\\u6631\\u91cc'}, {'id': '851402541586575', 'name': 'Yuusui Chan'}, {'id': '945065908846725', 'name': u'\\u90b1\\u5a01\\u9054'}, {'id': '938184356216100', 'name': 'Jason Lin'}, {'id': '1558946364385531', 'name': 'Fuji Hoopee'}, {'id': '874899869238225', 'name': u'\\u9ec3\\u827e\\u746a'}, {'id': '1062005367148836', 'name': u'\\u5b6b\\u65b0\\u7fd4'}, {'id': '285024584955249', 'name': 'Grace  Yang'}, ...], 'paging': {'cursors': {'after': 'MTEwMTIzMTkyOTkwMzExNg==', 'before': 'ODAwOTk5NjM5OTY5NzYy'}}}, 'message': u'\\u9084\\u4e0d\\u5982\\u84cb\\u500b\\u9748\\u9aa8\\u5854\\u6bd4\\u8f03\\u5be6\\u7528'}, {'comment_count': 3, 'comments': {'data': [{'can_remove': False, 'created_time': '2015-01-19T06:35:53+0000', 'from': {...}, 'id': '888863661153948_888893034484344', 'like_count': 2, 'message': u'\\u771f\\u7684', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-20T07:28:32+0000', 'from': {...}, 'id': '888863661153948_889420887764892', 'like_count': 2, 'message': u'\\u4e4b\\u524d\\u6709\\u770b\\u904e\\u65b0\\u805e\\u58...u5230\\u7684\\u90a3\\u7a2e\\u73bb\\u7483\\u5427....!!!', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-21T01:43:29+0000', 'from': {...}, 'id': '888863661153948_889879864385661', 'like_count': 0, 'message': u'\\u6de1\\u5b9a \\u4f60\\u61c2\\u4f60\\u5c31\\u662f\\u5927\\u5e2b\\u4e86', 'user_likes': False}], 'paging': {'cursors': {'after': 'WTI5dGJXVnVkRjlqZFhKemIzSTZPRGc1T0RjNU9EWTBNemcxTmpZeE9qRTBNakU0TURRMk1UQT0=', 'before': 'WTI5dGJXVnVkRjlqZFhKemIzSTZPRGc0T0Rrek1ETTBORGcwTXpRME9qRTBNakUyTkRrek5UTT0='}}}, 'created_time': '2015-01-19T04:43:26+0000', 'from': {'id': '785363684873429', 'name': 'Jun De'}, 'id': '888863661153948_888865254487122', 'like_count': 79, 'likes': {'data': [{'id': '863834067007539', 'name': u'\\u8a79\\u76ca\\u82ac'}, {'id': '910139379020299', 'name': 'JianJyun Liao'}, {'id': '993835823979199', 'name': u'\\u5f35\\u8a60\\u7fd4'}, {'id': '778459162235625', 'name': 'Tin Chen'}, {'id': '844584282280437', 'name': 'Fish Tsai'}, {'id': '852238958155132', 'name': 'Chang-Jiun Terrence Wu'}, {'id': '866611980068181', 'name': u'\\u838a\\u500d\\u627f'}, {'id': '10152753058631242', 'name': 'Shun-Ping Huang'}, {'id': '10205379696724291', 'name': 'Amy H. T. Lin'}, {'id': '10202816633091887', 'name': u'\\u9673\\u51a0\\u7db8'}, {'id': '1041856415829186', 'name': 'Novia Chen'}, {'id': '10205718948070651', 'name': 'Hou-Yi Chang'}, {'id': '10205806361179699', 'name': 'Jude Huang'}, {'id': '1067860483227769', 'name': 'Yu-wen Chen'}, {'id': '10203809894340218', 'name': 'YuanJiun Tuan'}, {'id': '10205147607044196', 'name': 'Bianca Kuo'}, {'id': '1558946364385531', 'name': 'Fuji Hoopee'}, {'id': '934495629907836', 'name': u'\\u9ec3\\u93f5\\u53f3'}, {'id': '285024584955249', 'name': 'Grace  Yang'}, {'id': '923005187718115', 'name': u'\\u97d3\\u96f2'}, ...], 'paging': {'cursors': {'after': 'MTU0MzQwMDI2OTI3NTA4Nw==', 'before': 'ODYzODM0MDY3MDA3NTM5'}}}, 'message': u'\\u5716\\u770b\\u8d77\\u4f86\\u5c31\\u50cf\\u7528\\u9d...\\u76ae\\u6a39\\u6728\\u6490\\u5230\\u534a\\u7a7a\\u4e2d'}, {'comment_count': 0, 'created_time': '2015-01-19T05:12:57+0000', 'from': {'id': '1058815667467938', 'name': 'Cefars Chen'}, 'id': '888863661153948_888872821153032', 'like_count': 9, 'likes': {'data': [{'id': '10205379696724291', 'name': 'Amy H. T. Lin'}, {'id': '451304701688924', 'name': 'Jeff  Lim'}, {'id': '1060063587341867', 'name': 'Kuo Chen'}, {'id': '10206213685612090', 'name': 'Julius Lim'}, {'id': '905080252859120', 'name': 'Yvonne Chen'}, {'id': '744796525618050', 'name': 'Su Xiao Yu'}, {'id': '943948125623447', 'name': u'\\u9ea5\\u82d7\\u79c0'}, {'id': '1543400269275087', 'name': u'\\u6d2a\\u65ed\\u797a'}, {'id': '451185718364834', 'name': u'\\u5f35\\u7389\\u7434'}], 'paging': {'cursors': {'after': 'NDUxMTg1NzE4MzY0ODM0', 'before': 'MTAyMDUzNzk2OTY3MjQyOTE='}}}, 'message': u'80\\u5104\\u62ff\\u4f86\\u62c6BRT+\\u84cb\\u5730\\u9435, \\u61c9\\u8a72\\u6703\\u6bd4\\u8f03\\u597d!'}, {'comment_count': 0, 'created_time': '2015-01-19T05:25:57+0000', 'from': {'id': '10153610440215410', 'name': 'Leon Chen'}, 'id': '888863661153948_888876234486024', 'like_count': 6, 'likes': {'data': [{'id': '10205379696724291', 'name': 'Amy H. T. Lin'}, {'id': '451304701688924', 'name': 'Jeff  Lim'}, {'id': '1034201149942181', 'name': u'\\u9673\\u82af'}, {'id': '1060063587341867', 'name': 'Kuo Chen'}, {'id': '905080252859120', 'name': 'Yvonne Chen'}, {'id': '943948125623447', 'name': u'\\u9ea5\\u82d7\\u79c0'}], 'paging': {'cursors': {'after': 'OTQzOTQ4MTI1NjIzNDQ3', 'before': 'MTAyMDUzNzk2OTY3MjQyOTE='}}}, 'message': u'\\u53f0\\u4e2d\\u5e02\\u9700\\u8981\\u6210\\u7acb\\u5e...\\uff01\\u5927\\u5bb6\\u7b49\\u8457\\u770b\\u5427\\uff01'}, {'comment_count': 0, 'created_time': '2015-01-19T06:05:35+0000', 'from': {'id': '1738418129717780', 'name': 'Emptiness Infinity'}, 'id': '888863661153948_888886021151712', 'like_count': 1, 'likes': {'data': [{'id': '451304701688924', 'name': 'Jeff  Lim'}], 'paging': {'cursors': {'after': 'NDUxMzA0NzAxNjg4OTI0', 'before': 'NDUxMzA0NzAxNjg4OTI0'}}}, 'message': u'\\u84cb\\u5566\\uff01\\u84cb\\u5566\\uff01\\u9802\\u59...\\u5f8c\\u4eba\\u300c\\u8ffd\\u601d\\u6191\\u5f14\\u300d'}, {'comment_count': 0, 'created_time': '2015-01-20T05:53:02+0000', 'from': {'id': '10205143900369400', 'name': 'Carolyn Hsu'}, 'id': '888863661153948_889398461100468', 'like_count': 1, 'likes': {'data': [{'id': '844584282280437', 'name': 'Fish Tsai'}], 'paging': {'cursors': {'after': 'ODQ0NTg0MjgyMjgwNDM3', 'before': 'ODQ0NTg0MjgyMjgwNDM3'}}}, 'message': u'\\u932f\\u8aa4\\u6c7a\\u7b56\\u6bd4\\u8caa\\u6c61\\u66...u6211\\u5b8c\\u5168\\u8a8d\\u540c\\u9019\\u53e5\\u8a71~'}, {'comment_count': 0, 'created_time': '2015-01-19T05:16:02+0000', 'from': {'id': '1047985701883728', 'name': 'John Chang'}, 'id': '888863661153948_888873561152958', 'like_count': 43, 'likes': {'data': [{'id': '973066252718619', 'name': u'\\u9673\\u6625\\u7f8e'}, {'id': '10205379696724291', 'name': 'Amy H. T. Lin'}, {'id': '1030276053653450', 'name': u'\\u795d\\u9298\\u4f51'}, {'id': '10202816633091887', 'name': u'\\u9673\\u51a0\\u7db8'}, {'id': '10153098485522726', 'name': u'\\u5433\\u5072\\u745c'}, {'id': '10203851031019050', 'name': 'Bulu Chang'}, {'id': '958423244168756', 'name': u'\\u856d\\u6dd1\\u82b3'}, {'id': '1020832994611472', 'name': 'Shingstar Tsai'}, {'id': '1045655922114933', 'name': u'\\u8449\\u6631\\u91cc'}, {'id': '902534393143477', 'name': u'\\u5f6d\\u79cb\\u4f86'}, {'id': '1031054546909242', 'name': u'\\u9673\\u827e\\u744b'}, {'id': '10153111503708599', 'name': 'Warren Lin'}, {'id': '755806871154819', 'name': u'\\u9ad8\\u7802\\u767e\\u5408'}, {'id': '934495629907836', 'name': u'\\u9ec3\\u93f5\\u53f3'}, {'id': '10202433576359036', 'name': 'Kai-yun Chang'}, {'id': '285024584955249', 'name': 'Grace  Yang'}, {'id': '923005187718115', 'name': u'\\u97d3\\u96f2'}, {'id': '798267536921379', 'name': 'David Wang'}, {'id': '941477975864935', 'name': 'Cheng Lee'}, {'id': '894138543959086', 'name': u'\\u9673\\u5955\\u9716'}, ...], 'paging': {'cursors': {'after': 'OTQzOTQ4MTI1NjIzNDQ3', 'before': 'OTczMDY2MjUyNzE4NjE5'}}}, 'message': u'\\u5176\\u5be6\\u2026\\u53f0\\u7063\\u76ee\\u524d\\u76...\\u53bb\\u904e\\u7684\\u90fd\\u6703\\u77e5\\u9053\\u2026'}, {'comment_count': 0, 'created_time': '2015-01-19T04:46:25+0000', 'from': {'id': '877973675578686', 'name': u'\\u90b1\\u5fd7\\u958e'}, 'id': '888863661153948_888866051153709', 'like_count': 43, 'likes': {'data': [{'id': '1602922983270539', 'name': u'\\u674e\\u9708\\u7dba'}, {'id': '844584282280437', 'name': 'Fish Tsai'}, {'id': '973066252718619', 'name': u'\\u9673\\u6625\\u7f8e'}, {'id': '797858740293222', 'name': u'\\u90ed\\u5927\\u7dad'}, {'id': '10205960451401316', 'name': 'Josephine Cheng'}, {'id': '10203851031019050', 'name': 'Bulu Chang'}, {'id': '958423244168756', 'name': u'\\u856d\\u6dd1\\u82b3'}, {'id': '1045655922114933', 'name': u'\\u8449\\u6631\\u91cc'}, {'id': '1081072341918239', 'name': u'\\u96f7\\u6d77\\u9752'}, {'id': '907749575911980', 'name': 'Look Yu'}, {'id': '10205147607044196', 'name': 'Bianca Kuo'}, {'id': '1031054546909242', 'name': u'\\u9673\\u827e\\u744b'}, {'id': '934495629907836', 'name': u'\\u9ec3\\u93f5\\u53f3'}, {'id': '285024584955249', 'name': 'Grace  Yang'}, {'id': '799713940096682', 'name': u'\\u9673\\u67cf\\u7db8'}, {'id': '894138543959086', 'name': u'\\u9673\\u5955\\u9716'}, {'id': '1024453597568995', 'name': 'Anna Wang'}, {'id': '10202514953274101', 'name': 'Steven Wu'}, {'id': '778598795551524', 'name': u'\\u838a\\u66dc\\u83ef'}, {'id': '10202374390401319', 'name': u'\\u9673\\u67cf\\u52f3'}, ...], 'paging': {'cursors': {'after': 'MTU0MzQwMDI2OTI3NTA4Nw==', 'before': 'MTYwMjkyMjk4MzI3MDUzOQ=='}}}, 'message': u'\\u53c8\\u662f\\u4e00\\u4ef6KMT\\u653f\\u5ba2\\u597d\\...7a0b,\\u9084\\u597d\\u6709\\u653f\\u9ee8\\u8f2a\\u66ff~'}, {'comment_count': 4, 'comments': {'data': [{'can_remove': False, 'created_time': '2015-01-19T05:45:00+0000', 'from': {...}, 'id': '888863661153948_888881137818867', 'like_count': 23, 'message': u'\\u56e0\\u70ba\\u7b2c\\u4e00\\u6b21\\u7684\\u9810\\u7b...u72d7\\u5b98\\u8981\\u62ff\\u7684 \\u7b97\\u9032\\u53bb', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T13:16:03+0000', 'from': {...}, 'id': '888863661153948_889013927805588', 'like_count': 5, 'message': u'\\u6e96\\u78ba\\u4f86\\u8aaa\\uff0c\\u662f\\u6c92\\u5beb\\u9032\\u53bb\\u3002', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T13:55:20+0000', 'from': {...}, 'id': '888863661153948_889053141135000', 'like_count': 6, 'message': u'\\u4f60\\u628a\\u624b\\u6cd5\\u6413\\u7834\\u4e86\\uff...u524d\\u5728\\u6a19\\u653f\\u5e9c\\u5de5\\u7a0b\\u7684)', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T17:32:27+0000', 'from': {...}, 'id': '888863661153948_889140694459578', 'like_count': 1, 'message': u'Vincent Huang  \\u5982\\u679c\\u9810\\u7b97\\u4e0d\\...e8\\u7684\\u516c\\u95dc\\u516c\\u53f8\\u5de5\\u4f5c...)', 'user_likes': False}], 'paging': {'cursors': {'after': 'WTI5dGJXVnVkRjlqZFhKemIzSTZPRGc1TVRRd05qazBORFU1TlRjNE9qRTBNakUyT0RnM05EYz0=', 'before': 'WTI5dGJXVnVkRjlqZFhKemIzSTZPRGc0T0RneE1UTTNPREU0T0RZM09qRTBNakUyTkRZek1EQT0='}}}, 'created_time': '2015-01-19T04:43:40+0000', 'from': {'id': '955116411174101', 'name': u'\\u674e\\u627f\\u8b19'}, 'id': '888863661153948_888865324487115', 'like_count': 34, 'likes': {'data': [{'id': '973066252718619', 'name': u'\\u9673\\u6625\\u7f8e'}, {'id': '934495629907836', 'name': u'\\u9ec3\\u93f5\\u53f3'}, {'id': '285024584955249', 'name': 'Grace  Yang'}, {'id': '973821222630583', 'name': 'Shao-Hung Chen'}, {'id': '1584712815073858', 'name': 'Yang  KE'}, {'id': '1425729967720185', 'name': u'\\u590f\\u821f\\u55e3'}, {'id': '1013224652025090', 'name': 'Sofia Lee'}, {'id': '10205347139952231', 'name': 'Tzu-Chen Tsai'}, {'id': '451304701688924', 'name': 'Jeff  Lim'}, {'id': '10205267509463839', 'name': 'Elma Wang'}, {'id': '1037017322981169', 'name': 'Tung Yu Chiang'}, {'id': '10205948925585722', 'name': 'Herman Tseng'}, {'id': '955116411174101', 'name': u'\\u674e\\u627f\\u8b19'}, {'id': '10202883111473863', 'name': 'Eric Tai'}, {'id': '978835055467938', 'name': u'\\u6674\\u8015\\u96e8\\u8b80'}, {'id': '612712912196827', 'name': u'\\u9673\\u79c0\\u6797'}, {'id': '660290424096446', 'name': 'YingWei Cheng'}, {'id': '905080252859120', 'name': 'Yvonne Chen'}, {'id': '744796525618050', 'name': 'Su Xiao Yu'}, {'id': '1041644585851177', 'name': u'\\u9673\\u5fd7\\u4ec1'}, ...], 'paging': {'cursors': {'after': 'MTAyMDYwOTQ2MzM5OTA2NTI=', 'before': 'OTczMDY2MjUyNzE4NjE5'}}}, 'message': u'\\u72d7\\u6c11\\u9ee8\\u6c7a\\u7b56\\u7684\\u6bcf\\u50...u4ec0\\u9ebc\\u610f\\u7fa9\\u5b58\\u5728\\u5462?\\uff3f'}, {'comment_count': 0, 'created_time': '2015-01-19T05:43:33+0000', 'from': {'id': '1543981265870472', 'name': 'Shih Misha'}, 'id': '888863661153948_888880741152240', 'like_count': 31, 'likes': {'data': [{'id': '973066252718619', 'name': u'\\u9673\\u6625\\u7f8e'}, {'id': '10206039332726049', 'name': 'Jui Chu Chang'}, {'id': '10205379696724291', 'name': 'Amy H. T. Lin'}, {'id': '10203851031019050', 'name': 'Bulu Chang'}, {'id': '10203413556372570', 'name': 'Kuowei Hsiao'}, {'id': '958423244168756', 'name': u'\\u856d\\u6dd1\\u82b3'}, {'id': '1020832994611472', 'name': 'Shingstar Tsai'}, {'id': '10153178087999312', 'name': 'Hsin-Chieh Derrick Lin'}, {'id': '953086424710157', 'name': 'Aayo Lee'}, {'id': '938184356216100', 'name': 'Jason Lin'}, {'id': '1031054546909242', 'name': u'\\u9673\\u827e\\u744b'}, {'id': '934495629907836', 'name': u'\\u9ec3\\u93f5\\u53f3'}, {'id': '285024584955249', 'name': 'Grace  Yang'}, {'id': '973821222630583', 'name': 'Shao-Hung Chen'}, {'id': '922680474430890', 'name': 'Sue Ho'}, {'id': '1024453597568995', 'name': 'Anna Wang'}, {'id': '773197449423435', 'name': u'\\u79cb\\u9704'}, {'id': '601293640006467', 'name': u'\\u5ed6\\u6234\\u723e'}, {'id': '10202479270063285', 'name': 'Kao Blue'}, {'id': '1013224652025090', 'name': 'Sofia Lee'}, ...], 'paging': {'cursors': {'after': 'OTA1MDgwMjUyODU5MTIw', 'before': 'OTczMDY2MjUyNzE4NjE5'}}}, 'message': u'\\u6211\\u662f\\u53f0\\u4e2d\\u4eba\\uff0c\\u6c34\\u6e...\\u5c4b\\u88dc\\u52a9\\u624d\\u662f\\u529f\\u5fb7\\u554a'}, {'comment_count': 2, 'comments': {'data': [{'can_remove': False, 'created_time': '2015-01-19T10:32:24+0000', 'from': {...}, 'id': '888863661153948_888959331144381', 'like_count': 7, 'message': u'\\u53f0\\u4e2d\\u706b\\u8eca\\u7ad9\\u65c1\\u908a\\u4e...\\u77e5\\u9053\\u4f55\\u6642\\u624d\\u80fd\\u6539\\u5584', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T16:52:02+0000', 'from': {...}, 'id': '888863661153948_889120444461603', 'like_count': 1, 'message': u'\\u81fa\\u4e2d\\u706b\\u8eca\\u7ad9\\u9031\\u570d\\u4e...\\u7159\\u7684\\u904a\\u6c11\\u5728\\u6d3b\\u52d5\\u3002', 'user_likes': False}], 'paging': {'cursors': {'after': 'WTI5dGJXVnVkRjlqZFhKemIzSTZPRGc1TVRJd05EUTBORFl4TmpBek9qRTBNakUyT0RZek1qST0=', 'before': 'WTI5dGJXVnVkRjlqZFhKemIzSTZPRGc0T1RVNU16TXhNVFEwTXpneE9qRTBNakUyTmpNMU5EUT0='}}}, 'created_time': '2015-01-19T05:27:01+0000', 'from': {'id': '362355237286052', 'name': u'\\u674e\\u827e\\u502b'}, 'id': '888863661153948_888876501152664', 'like_count': 23, 'likes': {'data': [{'id': '973066252718619', 'name': u'\\u9673\\u6625\\u7f8e'}, {'id': '10205379696724291', 'name': 'Amy H. T. Lin'}, {'id': '10203851031019050', 'name': 'Bulu Chang'}, {'id': '10153057275554831', 'name': 'Qinxuan Lin'}, {'id': '934495629907836', 'name': u'\\u9ec3\\u93f5\\u53f3'}, {'id': '285024584955249', 'name': 'Grace  Yang'}, {'id': '973821222630583', 'name': 'Shao-Hung Chen'}, {'id': '922680474430890', 'name': 'Sue Ho'}, {'id': '1024453597568995', 'name': 'Anna Wang'}, {'id': '773197449423435', 'name': u'\\u79cb\\u9704'}, {'id': '1013224652025090', 'name': 'Sofia Lee'}, {'id': '10153140129037079', 'name': 'James Hung'}, {'id': '619240294874565', 'name': 'Huang  Jason'}, {'id': '1034201149942181', 'name': u'\\u9673\\u82af'}, {'id': '818285204906093', 'name': u'\\u9673\\u7dad\\u5fb9'}, {'id': '362355237286052', 'name': u'\\u674e\\u827e\\u502b'}, {'id': '968037586541397', 'name': 'Sandy Tung'}, {'id': '859079734153321', 'name': u'\\u5409\\u7530'}, {'id': '1427015434257693', 'name': u'\\u5468\\u5f8c\\u88d4'}, {'id': '592098724267435', 'name': 'Felicity Lin'}, ...], 'paging': {'cursors': {'after': 'OTQzOTQ4MTI1NjIzNDQ3', 'before': 'OTczMDY2MjUyNzE4NjE5'}}}, 'message': u'\\u7528\\u90a3\\u4e9b\\u9322\\u628a\\u53f0\\u4e2d\\u76...u4eba\\u884c\\u9053\\u7684\\u6b98\\u7834\\u4e0d\\u582a!'}, {'comment_count': 4, 'comments': {'data': [{'can_remove': False, 'created_time': '2015-01-19T06:00:59+0000', 'from': {...}, 'id': '888863661153948_888884934485154', 'like_count': 6, 'message': u'\\u770b\\u770b\\u5176\\u4ed6\\u4f5c\\u54c1 \\u4e5f\\u6bd4\\u7b2c\\u4e00\\u540d\\u4f5c\\u54c1\\u597d', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T06:03:57+0000', 'from': {...}, 'id': '888863661153948_888885537818427', 'like_count': 7, 'message': u'\\u7532\\u8cfd\\u52d5\\u505a\\u5de5\\u7a0b\\u5c31\\u66...84cb\\uff0c\\u6211\\u770b15\\u5104\\u90fd\\u4e0d\\u7528', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T06:22:21+0000', 'from': {...}, 'id': '888863661153948_888889807818000', 'like_count': 3, 'message': u'\\u8d8a\\u597d\\u84cb\\u7684\\u7576\\u7136\\u8981\\u7b...\\u5bb6\\u624d\\u53ef\\u4ee5\\u62ff\\u8d8a\\u591a\\u9322', 'user_likes': False}, {'can_remove': False, 'created_time': '2015-01-19T06:39:35+0000', 'from': {...}, 'id': '888863661153948_888893817817599', 'like_count': 4, 'message': u'\\u8a55\\u5be9\\u5718\\u6fc0\\u70c8\\u722d\\u8faf\\uff...f\\u8a50\\u6b3a\\u55ce???\\u72d7\\u9ee8\\u8ca0\\u8cac!!', 'user_likes': False}], 'paging': {'cursors': {'after': 'WTI5dGJXVnVkRjlqZFhKemIzSTZPRGc0T0Rrek9ERTNPREUzTlRrNU9qRTBNakUyTkRrMU56VT0=', 'before': 'WTI5dGJXVnVkRjlqZFhKemIzSTZPRGc0T0RnME9UTTBORGcxTVRVME9qRTBNakUyTkRjeU5Uaz0='}}}, 'created_time': '2015-01-19T04:51:14+0000', 'from': {'id': '785363684873429', 'name': 'Jun De'}, 'id': '888863661153948_888867237820257', 'like_count': 18, 'likes': {'data': [{'id': '973066252718619', 'name': u'\\u9673\\u6625\\u7f8e'}, {'id': '1030276053653450', 'name': u'\\u795d\\u9298\\u4f51'}, {'id': '1567613636819862', 'name': 'Xuang Xiao'}, {'id': '1039739109374824', 'name': 'Rex Wu'}, {'id': '10202479270063285', 'name': 'Kao Blue'}, {'id': '1013224652025090', 'name': 'Sofia Lee'}, {'id': '451304701688924', 'name': 'Jeff  Lim'}, {'id': '10206213685612090', 'name': 'Julius Lim'}, {'id': '1559184157686901', 'name': 'Jimmy Tsai'}, {'id': '1042912725724418', 'name': u'\\u6797\\u6f6e\\u6176'}, {'id': '405873229584015', 'name': 'Julie Chou'}, {'id': '906448649376931', 'name': u'\\u90ed\\u6587\\u9d3b'}, {'id': '905080252859120', 'name': 'Yvonne Chen'}, {'id': '10202373644622083', 'name': 'Ming Hung Hsieh'}, {'id': '10202553117667700', 'name': u'\\u6c5f\\u4fe1\\u5b8f'}, {'id': '10205830597821301', 'name': 'Rick Lee'}, {'id': '1607890712768343', 'name': u'\\u4f0d\\u73fe\\u6dbc'}, {'id': '939138479463623', 'name': u'\\u5f35\\u5bb8\\u745c'}], 'paging': {'cursors': {'after': 'OTM5MTM4NDc5NDYzNjIz', 'before': 'OTczMDY2MjUyNzE4NjE5'}}}, 'message': u'http://forgemind.net/phpbb/viewtopic.php?t=218...\\u9df9\\u67b6\\u9084\\u4e0d\\u5982\\u4e0d\\u8981\\u84cb'}, {'comment_count': 0, 'created_time': '2015-01-19T04:49:50+0000', 'from': {'id': '1441030569520839', 'name': 'ChengYi Chen'}, 'id': '888863661153948_888866897820291', 'like_count': 14, 'likes': {'data': [{'id': '844584282280437', 'name': 'Fish Tsai'}, {'id': '973066252718619', 'name': u'\\u9673\\u6625\\u7f8e'}, {'id': '10203851031019050', 'name': 'Bulu Chang'}, {'id': '1567613636819862', 'name': 'Xuang Xiao'}, {'id': '10202479270063285', 'name': 'Kao Blue'}, {'id': '1013224652025090', 'name': 'Sofia Lee'}, {'id': '451304701688924', 'name': 'Jeff  Lim'}, {'id': '10203741873851672', 'name': 'Steffen Nien'}, {'id': '405873229584015', 'name': 'Julie Chou'}, {'id': '1543400269275087', 'name': u'\\u6d2a\\u65ed\\u797a'}, {'id': '660290424096446', 'name': 'YingWei Cheng'}, {'id': '966286183389116', 'name': u'\\u6797\\u4fe1\\u4ef2'}, {'id': '939138479463623', 'name': u'\\u5f35\\u5bb8\\u745c'}], 'paging': {'cursors': {'after': 'OTM5MTM4NDc5NDYzNjIz', 'before': 'ODQ0NTg0MjgyMjgwNDM3'}}}, 'message': u'\\u570b\\u6c11\\u9ee8\\u4e0d\\u5012\\uff0c\\u53f0\\u7063\\u4e0d\\u6703\\u597d\\u3002'}, {'comment_count': 0, 'created_time': '2015-01-19T04:55:01+0000', 'from': {'id': '793125854104587', 'name': u'\\u842c\\u7f8e\\u5a25'}, 'id': '888863661153948_888868221153492', 'like_count': 13, 'likes': {'data': [{'id': '973066252718619', 'name': u'\\u9673\\u6625\\u7f8e'}, {'id': '10206039332726049', 'name': 'Jui Chu Chang'}, {'id': '922680474430890', 'name': 'Sue Ho'}, {'id': '1013224652025090', 'name': 'Sofia Lee'}, {'id': '592098724267435', 'name': 'Felicity Lin'}, {'id': '968300166521268', 'name': 'Felicia Pai'}, {'id': '744796525618050', 'name': 'Su Xiao Yu'}, {'id': '10205830597821301', 'name': 'Rick Lee'}, {'id': '1543400269275087', 'name': u'\\u6d2a\\u65ed\\u797a'}, {'id': '451185718364834', 'name': u'\\u5f35\\u7389\\u7434'}, {'id': '939138479463623', 'name': u'\\u5f35\\u5bb8\\u745c'}, {'id': '813489465388380', 'name': 'Vincent Chen'}], 'paging': {'cursors': {'after': 'ODEzNDg5NDY1Mzg4Mzgw', 'before': 'OTczMDY2MjUyNzE4NjE5'}}}, 'message': u'\\u628a\\u9019\\u4e9b\\u9322\\u62ff\\u4f86\\u84cb\\u6a...u5712\\u548c\\u7da0\\u5316\\u4f86\\u7684\\u5be6\\u5728!'}, {'comment_count': 0, 'created_time': '2015-01-19T04:45:23+0000', 'from': {'id': '1585437838334908', 'name': u'\\u5433\\u6c38\\u8aa0'}, 'id': '888863661153948_888865844487063', 'like_count': 13, 'likes': {'data': [{'id': '844584282280437', 'name': 'Fish Tsai'}, {'id': '973066252718619', 'name': u'\\u9673\\u6625\\u7f8e'}, {'id': '922680474430890', 'name': 'Sue Ho'}, {'id': '1013224652025090', 'name': 'Sofia Lee'}, {'id': '451304701688924', 'name': 'Jeff  Lim'}, {'id': '10206213685612090', 'name': 'Julius Lim'}, {'id': '10205830597821301', 'name': 'Rick Lee'}, {'id': '939138479463623', 'name': u'\\u5f35\\u5bb8\\u745c'}, {'id': '793125854104587', 'name': u'\\u842c\\u7f8e\\u5a25'}, {'id': '1441030569520839', 'name': 'ChengYi Chen'}, {'id': '1543400269275087', 'name': u'\\u6d2a\\u65ed\\u797a'}, {'id': '1041626415854037', 'name': u'\\u5289\\u6dd1\\u5a1f'}], 'paging': {'cursors': {'after': 'MTA0MTYyNjQxNTg1NDAzNw==', 'before': 'ODQ0NTg0MjgyMjgwNDM3'}}}, 'message': u'\\u597d\\u5927\\u559c\\u529f\\u3001\\u7121\\u6240\\u88e8\\u76ca\\u7684\\u5efa\\u8a2d\\uff01'}, {'comment_count': 0, 'created_time': '2015-01-19T05:50:26+0000', 'from': {'id': '1059616257385966', 'name': 'Ming Yuan Yang'}, 'id': '888863661153948_888882561152058', 'like_count': 10, 'likes': {'data': [{'id': '973066252718619', 'name': u'\\u9673\\u6625\\u7f8e'}, {'id': '450160918473271', 'name': 'Youze Lin'}, {'id': '1013224652025090', 'name': 'Sofia Lee'}, {'id': '451304701688924', 'name': 'Jeff  Lim'}, {'id': '10206213685612090', 'name': 'Julius Lim'}, {'id': '939138479463623', 'name': u'\\u5f35\\u5bb8\\u745c'}, {'id': '1546401518944689', 'name': u'\\u5433\\u8ed2\\u777f'}, {'id': '660290424096446', 'name': 'YingWei Cheng'}, {'id': '905080252859120', 'name': 'Yvonne Chen'}], 'paging': {'cursors': {'after': 'OTA1MDgwMjUyODU5MTIw', 'before': 'OTczMDY2MjUyNzE4NjE5'}}}, 'message': u'\\u300c\\u932f\\u8aa4\\u6c7a\\u7b56\\u6bd4\\u8caa\\u6c61\\u66f4\\u53ef\\u6015\\u3002\\u300d\\u8b9a\\u5566!'}, {'comment_count': 0, 'created_time': '2015-01-19T05:48:18+0000', 'from': {'id': '968544729846084', 'name': 'Leesyan Huang'}, 'id': '888863661153948_888882061152108', 'like_count': 9, 'likes': {'data': [{'id': '973066252718619', 'name': u'\\u9673\\u6625\\u7f8e'}, {'id': '10206039332726049', 'name': 'Jui Chu Chang'}, {'id': '1013224652025090', 'name': 'Sofia Lee'}, {'id': '451304701688924', 'name': 'Jeff  Lim'}, {'id': '1034201149942181', 'name': u'\\u9673\\u82af'}, {'id': '968037586541397', 'name': 'Sandy Tung'}, {'id': '939138479463623', 'name': u'\\u5f35\\u5bb8\\u745c'}, {'id': '1543400269275087', 'name': u'\\u6d2a\\u65ed\\u797a'}], 'paging': {'cursors': {'after': 'MTU0MzQwMDI2OTI3NTA4Nw==', 'before': 'OTczMDY2MjUyNzE4NjE5'}}}, 'message': u'\\u80fd\\u70ba\\u767e\\u59d3\\u628a\\u95dc,\\u8b9a!! ...8cad\\u800c\\u975e\\u8a0e\\u597d\\u7684\\u9a19\\u5c40..'}, {'comment_count': 0, 'created_time': '2015-01-19T05:12:15+0000', 'from': {'id': '967298726614762', 'name': 'Toshihiko Liu'}, 'id': '888863661153948_888872634486384', 'like_count': 9, 'likes': {'data': [{'id': '10206039332726049', 'name': 'Jui Chu Chang'}, {'id': '1013224652025090', 'name': 'Sofia Lee'}, {'id': '619240294874565', 'name': 'Huang  Jason'}, {'id': '10206213685612090', 'name': 'Julius Lim'}, {'id': '10202601926449829', 'name': u'\\u9673\\u59ff\\u541b'}, {'id': '592098724267435', 'name': 'Felicity Lin'}, {'id': '10202553117667700', 'name': u'\\u6c5f\\u4fe1\\u5b8f'}, {'id': '10205830597821301', 'name': 'Rick Lee'}, {'id': '1543400269275087', 'name': u'\\u6d2a\\u65ed\\u797a'}], 'paging': {'cursors': {'after': 'MTU0MzQwMDI2OTI3NTA4Nw==', 'before': 'MTAyMDYwMzkzMzI3MjYwNDk='}}}, 'message': u'150E-3E=147E\\u6295\\u5165\\u6377\\u904b\\u5de5\\u7a0b'}, {'comment_count': 0, 'created_time': '2015-01-19T05:34:44+0000', 'from': {'id': '922137497805488', 'name': u'\\u9ec3\\u6f22\\u8ce2'}, 'id': '888863661153948_888878474485800', 'like_count': 8, 'likes': {'data': [{'id': '10204898308751060', 'name': 'Yen-Chih Fang'}, {'id': '1013224652025090', 'name': 'Sofia Lee'}, {'id': '451304701688924', 'name': 'Jeff  Lim'}, {'id': '939138479463623', 'name': u'\\u5f35\\u5bb8\\u745c'}, {'id': '1427015434257693', 'name': u'\\u5468\\u5f8c\\u88d4'}, {'id': '592098724267435', 'name': 'Felicity Lin'}, {'id': '905080252859120', 'name': 'Yvonne Chen'}, {'id': '451185718364834', 'name': u'\\u5f35\\u7389\\u7434'}], 'paging': {'cursors': {'after': 'NDUxMTg1NzE4MzY0ODM0', 'before': 'MTAyMDQ4OTgzMDg3NTEwNjA='}}}, 'message': u'\\u82b115000000000(\\u5e7e\\u500b0\\u554a\\u6e3e\\u8...u5712\\u8981\\u5e79\\u561b\\u4e86\\u80e1\\u5fd7\\u5f37?'}, ...], 'paging': {'cursors': {'after': 'NzE=', 'before': 'OTU='}, 'next': 'https://graph.facebook.com/v2.2/888863661153948/...NTWOWRzxGxXyL3nUi99Abk4XlcyD6UdrNa3dRja8&limit=25', 'previous': 'https://graph.facebook.com/v2.2/888863661153948/...nUi99Abk4XlcyD6UdrNa3dRja8&limit=25&before=OTU%3D'}}"
p177
sS'next_p'
p178
S"'NzE%3D'"
p179
sS'news_fid'
p180
S"'888863661153948'"
p181
sS'graph.request'
p182
S'<bound method GraphAPI.request of <facebook.GraphAPI object>>'
p183
ssg82
I1777
sg83
(dp184
I1772
S'                    fbdb.commit()'
p185
sI1773
S'                    #row_json = fbdb(fbdb.news_comments.fid==cid).select().first().as_json()'
p186
sI1774
S"                    r_message='successfully added the comment into DB'"
p187
sI1775
S'                next_p = posts["paging"]["next"].split(\'&after=\')[-1].split(\'&\')[0] if \'next\' in posts["paging"] else None'
p188
sI1776
S'                if next_p <> None:'
p189
sI1777
S"                    posts = graph.request(news_fid + '/comments', args={'fields':'likes.limit(1000),comments.limit(1000),message,from,id,like_count,created_time,parent,comment_count','after': next_p})"
p190
sI1778
S'                    delay()'
p191
sI1779
S''
sI1780
S'    except GraphAPIError, e:'
p192
sI1781
S'        raise'
p193
ssg95
S"(fids='1016340705062516,600808040019726,920301688010698...4,724865657627709,680501485380396,776344072449017')"
p194
sg97
S'getGroupNewsComment'
p195
sa(dp196
g74
S'/usr/local/lib/python2.7/site-packages/facebook.py'
p197
sg76
(dp198
S'self.timeout'
p199
S'None'
p200
sS'global urllib'
p201
S"<module 'urllib' from '/usr/local/Cellar/python/...framework/Versions/2.7/lib/python2.7/urllib.pyc'>"
p202
sS'urllib.urlencode'
p203
S'<function urlencode>'
p204
sS'self'
p205
S'<facebook.GraphAPI object>'
p206
sS'args'
p207
S"{'access_token': 'CAAPXPqLzG54BALYS3NaaZAtHzVsVZB9JibZBqQGRMT3zlI8...ZC6oKzb6WNTWOWRzxGxXyL3nUi99Abk4XlcyD6UdrNa3dRja8', 'after': 'NzE%3D', 'fields': 'likes.limit(1000),comments.limit(1000),message,from,id,like_count,created_time,parent,comment_count'}"
p208
sS'post_data'
p209
S'None'
p210
sS'timeout'
p211
g117
ssg82
I295
sg83
(dp212
I290
S'            else:'
p213
sI291
S'                args["access_token"] = self.access_token'
p214
sI292
S'        post_data = None if post_args is None else urllib.urlencode(post_args)'
p215
sI293
S'        try:'
p216
sI294
S'            file = urllib2.urlopen("https://graph.facebook.com/" + path + "?" +'
p217
sI295
S'                    urllib.urlencode(args), post_data, timeout=self.timeout)'
p218
sI296
S'        except urllib2.HTTPError, e:'
p219
sI297
S'            response = _parse_json(e.read())'
p220
sI298
S'            raise GraphAPIError(response)'
p221
sI299
S'        except TypeError:'
p222
ssg95
S"(self=<facebook.GraphAPI object>, path='888863661153948/comments', args={'access_token': 'CAAPXPqLzG54BALYS3NaaZAtHzVsVZB9JibZBqQGRMT3zlI8...ZC6oKzb6WNTWOWRzxGxXyL3nUi99Abk4XlcyD6UdrNa3dRja8', 'after': 'NzE%3D', 'fields': 'likes.limit(1000),comments.limit(1000),message,from,id,like_count,created_time,parent,comment_count'}, post_args=None)"
p223
sg97
g68
sa(dp224
g74
S'/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py'
p225
sg76
(dp226
S'_opener.open'
p227
S'<bound method OpenerDirector.open of <urllib2.OpenerDirector instance>>'
p228
sS'url'
p229
S"'https://graph.facebook.com/888863661153948/comme...ated_time%2Cparent%2Ccomment_count&after=NzE%253D'"
p230
sS'data'
p231
S'None'
p232
sS'global _opener'
p233
S'<urllib2.OpenerDirector instance>'
p234
sS'timeout'
p235
S'None'
p236
ssg82
I127
sg83
(dp237
I128
S''
sI129
S'def install_opener(opener):'
p238
sI130
S'    global _opener'
p239
sI131
S'    _opener = opener'
p240
sI122
S'_opener = None'
p241
sI123
S'def urlopen(url, data=None, timeout=socket._GLOBAL_DEFAULT_TIMEOUT):'
p242
sI124
S'    global _opener'
p243
sI125
S'    if _opener is None:'
p244
sI126
S'        _opener = build_opener()'
p245
sI127
S'    return _opener.open(url, data, timeout)'
p246
ssg95
S"(url='https://graph.facebook.com/888863661153948/comme...ated_time%2Cparent%2Ccomment_count&after=NzE%253D', data=None, timeout=None)"
p247
sg97
S'urlopen'
p248
sa(dp249
g74
S'/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py'
p250
sg76
(dp251
S'self'
p252
S'<urllib2.OpenerDirector instance>'
p253
sS'req'
p254
S'<urllib2.Request instance>'
p255
sS'data'
p256
S'None'
p257
sS'response'
p258
g117
sS'self._open'
p259
S'<bound method OpenerDirector._open of <urllib2.OpenerDirector instance>>'
p260
ssg82
I404
sg83
(dp261
I399
S'        meth_name = protocol+"_request"'
p262
sI400
S'        for processor in self.process_request.get(protocol, []):'
p263
sI401
S'            meth = getattr(processor, meth_name)'
p264
sI402
S'            req = meth(req)'
p265
sI403
S''
sI404
S'        response = self._open(req, data)'
p266
sI405
S''
sI406
S'        # post-process response'
p267
sI407
S'        meth_name = protocol+"_response"'
p268
sI408
S'        for processor in self.process_response.get(protocol, []):'
p269
ssg95
S"(self=<urllib2.OpenerDirector instance>, fullurl='https://graph.facebook.com/888863661153948/comme...ated_time%2Cparent%2Ccomment_count&after=NzE%253D', data=None, timeout=None)"
p270
sg97
S'open'
p271
sa(dp272
g74
S'/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py'
p273
sg76
(dp274
S'req'
p275
S'<urllib2.Request instance>'
p276
ssg82
I422
sg83
(dp277
I417
S'        if result:'
p278
sI418
S'            return result'
p279
sI419
S''
sI420
S'        protocol = req.get_type()'
p280
sI421
S'        result = self._call_chain(self.handle_open, protocol, protocol +'
p281
sI422
S"                                  '_open', req)"
p282
sI423
S'        if result:'
p283
sI424
S'            return result'
p284
sI425
S''
sI426
S"        return self._call_chain(self.handle_open, 'unknown',"
p285
ssg95
S'(self=<urllib2.OpenerDirector instance>, req=<urllib2.Request instance>, data=None)'
p286
sg97
S'_open'
p287
sa(dp288
g74
S'/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py'
p289
sg76
(dp290
S'args'
p291
S'(<urllib2.Request instance>,)'
p292
sS'result'
p293
g117
sS'func'
p294
S'<bound method HTTPSHandler.https_open of <urllib2.HTTPSHandler instance>>'
p295
ssg82
I382
sg83
(dp296
I384
S'                return result'
p297
sI385
S''
sI386
S'    def open(self, fullurl, data=None, timeout=socket._GLOBAL_DEFAULT_TIMEOUT):'
p298
sI377
S'        # could.  Otherwise, they return the response.'
p299
sI378
S'        handlers = chain.get(kind, ())'
p300
sI379
S'        for handler in handlers:'
p301
sI380
S'            func = getattr(handler, meth_name)'
p302
sI381
S''
sI382
S'            result = func(*args)'
p303
sI383
S'            if result is not None:'
p304
ssg95
S"(self=<urllib2.OpenerDirector instance>, chain={'file': [<urllib2.FileHandler instance>], 'ftp': [<urllib2.FTPHandler instance>], 'http': [<urllib2.HTTPHandler instance>], 'https': [<urllib2.HTTPSHandler instance>], 'unknown': [<urllib2.UnknownHandler instance>]}, kind='https', meth_name='https_open', *args=(<urllib2.Request instance>,))"
p305
sg97
S'_call_chain'
p306
sa(dp307
g74
S'/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py'
p308
sg76
(dp309
S'self'
p310
S'<urllib2.HTTPSHandler instance>'
p311
sS'req'
p312
S'<urllib2.Request instance>'
p313
sS'global httplib'
p314
S"<module 'httplib' from '/usr/local/Cellar/python...ramework/Versions/2.7/lib/python2.7/httplib.pyc'>"
p315
sS'self.do_open'
p316
S'<bound method HTTPSHandler.do_open of <urllib2.HTTPSHandler instance>>'
p317
sS'httplib.HTTPSConnection'
p318
S'<class httplib.HTTPSConnection>'
p319
ssg82
I1222
sg83
(dp320
I1217
S''
sI1218
S"if hasattr(httplib, 'HTTPS'):"
p321
sI1219
S'    class HTTPSHandler(AbstractHTTPHandler):'
p322
sI1220
S''
sI1221
S'        def https_open(self, req):'
p323
sI1222
S'            return self.do_open(httplib.HTTPSConnection, req)'
p324
sI1223
S''
sI1224
S'        https_request = AbstractHTTPHandler.do_request_'
p325
sI1225
S''
sI1226
S'class HTTPCookieProcessor(BaseHandler):'
p326
ssg95
S'(self=<urllib2.HTTPSHandler instance>, req=<urllib2.Request instance>)'
p327
sg97
S'https_open'
p328
sa(dp329
g74
S'/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py'
p330
sg76
(dp331
S'err'
p332
S"error(65, 'No route to host')"
p333
sS'global URLError'
p334
S"<class 'urllib2.URLError'>"
p335
ssg82
I1184
sg83
(dp336
I1184
S'            raise URLError(err)'
p337
sI1185
S'        else:'
p338
sI1186
S'            try:'
p339
sI1187
S'                r = h.getresponse(buffering=True)'
p340
sI1188
S'            except TypeError: # buffering kw not supported'
p341
sI1179
S''
sI1180
S'        try:'
p342
sI1181
S'            h.request(req.get_method(), req.get_selector(), req.data, headers)'
p343
sI1182
S'        except socket.error, err: # XXX what error?'
p344
sI1183
S'            h.close()'
p345
ssg95
S'(self=<urllib2.HTTPSHandler instance>, http_class=<class httplib.HTTPSConnection>, req=<urllib2.Request instance>)'
p346
sg97
S'do_open'
p347
sasS'pyver'
p348
S'Python 2.7.7: /usr/local/opt/python/bin/python2.7 (prefix: /usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7)'
p349
sS'session'
p350
g69
(S's\xa2\x0b\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>ed06f667-fcce-4ab3-9192-60e317a1c0e3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 3, 5, 3, 11, 51, 600242)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remember</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>Chih-Yuan</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>5L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>Chen</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div>10152723143866527</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">username</td><td style="vertical-align:top;">:</td><td><div>10152723143866527</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">5</td><td style="vertical-align:top;">:</td><td><div>user_5</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">redirect_uri</td><td style="vertical-align:top;">:</td><td><div>http://localhost:8088/fbBrt/default/user/login</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">token</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">access_token</td><td style="vertical-align:top;">:</td><td><div>CAAPXPqLzG54BALYS3NaaZAtHzVsVZB9JibZBqQGRMT3zlI8ZBQVxEVp2qZBoKYJPuMIJFHZAuCRnG9bZCWsNr7E4WXlPBfOfbhDr9TGhFjSfRxdwi6cVH50m7xQDZBEmzGmZBMZAZBkPGArc19FGl5kAYewsK8RI9OATGVsRuPtZC6oKzb6WNTWOWRzxGxXyL3nUi99Abk4XlcyD6UdrNa3dRja8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div>1430669216.838524</div></td></tr></table></div></td></tr></table></div>'
tRp351
sS'etype'
p352
S"<class 'urllib2.URLError'>"
p353
sS'date'
p354
S'Thu Mar  5 05:49:45 2015'
p355
sS'response'
p356
g69
(S's\xa0#\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x129215768&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_fbbrt</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-bf888576-794f-4889-ae58-051e54aa14cc<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>Logged in</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="brand" href="http://www.web2py.com/"><b>web<span>2</span>py</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>BRT\xe6\x96\xb0\xe8\x81\x9e</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/display_news</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>\xe5\x8d\xb3\xe6\x99\x82\xe6\x96\xb0\xe8\x81\x9e</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/realtime_news</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>\xe6\x9c\xac\xe9\x80\xb1\xe6\x9c\x80\xe7\x86\xb1\xe9\x96\x80</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/Hottest_news</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>\xe6\xad\xb7\xe5\x8f\xb2\xe6\x96\xb0\xe8\x81\x9e\xe6\x8e\x92\xe5\x90\x8d</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/History_news</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>\xe7\xb6\xb2\xe5\x8f\x8b</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/display_people</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>\xe6\x9c\x80\xe6\x96\xb0\xe5\x9b\x9e\xe8\xa6\x86</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/addPeople</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Page</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/display_page</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Page Count</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/index</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Add Page</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/addPage</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Post</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/display_post</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Add Post</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/addpost</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^newsAPI/\\w+\\.py$</div></td></tr><tr><td><div>^newsAPI/test2/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_fbbrt</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/Users/logyuan/Documents/web2py/applications/fbBrt/sessions/127.0.0.1-bf888576-794f-4889-ae58-051e54aa14cc&#x27;, mode &#x27;rb+&#x27; at 0x120e42b70&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/Users/logyuan/Documents/web2py/applications/fbBrt/sessions/127.0.0.1-bf888576-794f-4889-ae58-051e54aa14cc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>1bb044fc093f019336f79b1c924a1db0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-bf888576-794f-4889-ae58-051e54aa14cc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_fbbrt</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>fbBrt</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div>customize me!</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Fbbrt</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>newsAPI/test2.html</div></td></tr></table></div>'
tRp357
sS'locals'
p358
(dp359
S'err'
p360
S"error(65, 'No route to host')"
p361
sS'h'
S'<httplib.HTTPSConnection instance>'
p362
sS'self'
p363
S'<urllib2.HTTPSHandler instance>'
p364
sS'req'
p365
S'<urllib2.Request instance>'
p366
sS'headers'
p367
S"{'Connection': 'close', 'Host': 'graph.facebook.com', 'User-Agent': 'Python-urllib/2.7'}"
p368
sS'host'
p369
S"'graph.facebook.com'"
p370
sS'http_class'
p371
S'<class httplib.HTTPSConnection>'
p372
sssS'traceback'
p373
S'Traceback (most recent call last):\n  File "/Users/logyuan/Documents/web2py/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/Users/logyuan/Documents/web2py/applications/fbBrt/controllers/newsAPI.py", line 536, in <module>\n  File "/Users/logyuan/Documents/web2py/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/logyuan/Documents/web2py/applications/fbBrt/controllers/newsAPI.py", line 107, in test2\n    newsbrt.updateAllComments()\n  File "/Users/logyuan/Documents/web2py/applications/fbBrt/models/graph.py", line 605, in updateAllComments\n    getGroupNewsComment(fids)\n  File "/Users/logyuan/Documents/web2py/applications/fbBrt/models/graph.py", line 1777, in getGroupNewsComment\n    posts = graph.request(news_fid + \'/comments\', args={\'fields\':\'likes.limit(1000),comments.limit(1000),message,from,id,like_count,created_time,parent,comment_count\',\'after\': next_p})\n  File "/usr/local/lib/python2.7/site-packages/facebook.py", line 295, in request\n    urllib.urlencode(args), post_data, timeout=self.timeout)\n  File "/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py", line 127, in urlopen\n    return _opener.open(url, data, timeout)\n  File "/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py", line 404, in open\n    response = self._open(req, data)\n  File "/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py", line 422, in _open\n    \'_open\', req)\n  File "/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py", line 382, in _call_chain\n    result = func(*args)\n  File "/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py", line 1222, in https_open\n    return self.do_open(httplib.HTTPSConnection, req)\n  File "/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py", line 1184, in do_open\n    raise URLError(err)\nURLError: <urlopen error [Errno 65] No route to host>\n'
p374
s.
(dp1
S'output'
p2
S"<class 'urllib2.URLError'> <urlopen error [Errno 54] Connection reset by peer>"
p3
sS'layer'
p4
S'/Users/logyuan/Documents/web2py/applications/fbBrt/controllers/newsAPI.py'
p5
sS'code'
p6
S'# coding: utf8\n# try something like\nimport urllib\nimport json\nimport dateutil\nimport datetime\nimport string\nimport re\nimport itertools\nfrom collections import Counter\nfrom collections import OrderedDict\nfrom dateutil import parser\nfrom datetime import timedelta\nimport jieba\nimport jieba.analyse\nimport jieba.posseg as pseg\nfrom snownlp import SnowNLP\nfrom snownlp import sentiment\nfrom datetime import timedelta\nfrom operator import itemgetter\nimport codecs\nimport os\n\n#pos_train = os.path.join(request.folder,\'private\',\'dictionary\',\'pos.txt\')\n#nag_train = os.path.join(request.folder,\'private\',\'dictionary\',\'nag.txt\')\n#sentiment.train(pos_train, nag_train)\n\n#sentiment.save(os.path.join(request.folder,\'private\',\'sentiment.marshal\'))\n# sentiment.train(\'/usr/local/lib/python2.7/site-packages/snownlp/sentiment/blue.txt\', \'/usr/local/lib/python2.7/site-packages/snownlp/sentiment/green.txt\')\n#sentiment.save(\'/usr/local/lib/python2.7/site-packages/snownlp/sentiment/sentiment.marshal\')\n\n\ndictionary_path = os.path.join(request.folder,\'private\',\'dictionary\',\'dict.txt.big.txt\')\nuserdict_path = os.path.join(request.folder,\'private\',\'dictionary\',\'userdict.txt\')\nstopwords_path = os.path.join(request.folder,\'private\',\'dictionary\',\'stop_words.txt\')\nidf_path = os.path.join(request.folder,\'private\',\'dictionary\',\'idf.txt.big.txt\')\n\njieba.set_dictionary(dictionary_path)\njieba.load_userdict(userdict_path)\njieba.analyse.set_stop_words(stopwords_path)\njieba.analyse.set_idf_path(idf_path)\n\nstopwords_file = open(stopwords_path, \'r\')\nstopwords = [unicode(line.strip(\'\\n\'), "utf-8") for line in stopwords_file.readlines()]\n\n\n#jieba.initialize()\n\n\ndelEnStr = string.punctuation + \' \' + string.digits\ndelZhStr = u\'\xe3\x80\x8a\xe3\x80\x8b\xef\xbc\x88\xef\xbc\x89&%\xef\xbf\xa5#@\xef\xbc\x81{}\xe3\x80\x90\xe3\x80\x91\xe3\x80\x8c\xe3\x80\x8d\xe3\x80\x8e\xe3\x80\x8f\xef\xbc\x9f\xef\xbd\x9c\xef\xbc\x8c\xe3\x80\x81\xe3\x80\x82\xef\xbc\x9a\xef\xbc\x9b\xe4\xb8\xb6\xef\xbd\x9e\xe3\x80\x80\' + delEnStr.encode(\'utf8\')\n\n\ndef index():\n    started_time = datetime.datetime.now()\n    Brtnews24_url = "https://www.kimonolabs.com/api/47bg0pfm?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    Brtnews7days_url = "https://www.kimonolabs.com/api/ajldjyxq?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    Brtnews30days_url = "https://www.kimonolabs.com/api/5xnus1ws?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    Brtnews1year_url = "https://www.kimonolabs.com/api/d1shcaww?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    kimono_api(Brtnews7days_url, "BRT")\n    \n\n    mayor24_url = "https://www.kimonolabs.com/api/7br3eu62?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    mayor7days_url = "https://www.kimonolabs.com/api/863lok12?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    mayor30days_url = "https://www.kimonolabs.com/api/8h259vhq?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    mayor1year_url = "https://www.kimonolabs.com/api/cs5dtbm0?apikey=22879e6cd7538eea6e95b90aa70afccc"\n    #kimono_api(mayor1year_url, "\xe6\x9e\x97\xe4\xbd\xb3\xe9\xbe\x8d")\n\n    today = datetime.datetime.today()\n    date = today - timedelta(days=3)\n    fromdate = datetime.datetime.strftime(date, "%Y/%m/%d")\n    todate = datetime.datetime.strftime(today, "%Y/%m/%d")\n    #checkDBNewsComments()\n    #checkDBNewsCommentsFromDate(fromdate)\n    ended_time = datetime.datetime.now()\n    fbdb.event_logs.insert(function=\'kimono_api\', started_time=started_time, ended_time=ended_time)\n    fbdb.commit()\n    started_time = datetime.datetime.now()\n    Socialcount()\n    ended_time = datetime.datetime.now()\n    fbdb.event_logs.insert(function=\'updateSocialcount\', started_time=started_time, ended_time=ended_time)\n    fbdb.commit()\n    started_time = datetime.datetime.now()\n    checkDBNewsComments()\n    ended_time = datetime.datetime.now()\n    fbdb.event_logs.insert(function=\'checkDBNewsComments\', started_time=started_time, ended_time=ended_time)\n    fbdb.commit()\n\n\n\n\n    return "OK"\n\ndef test():\n    rows = fbdb(fbdb.news_comments.comments <> None).select()\n    for row in rows:\n        fid = row[\'fid\']\n        convertNewsComms(fid)\n    #rows=fbdb(fbdb.news.comment_count>0).select()\n    #total = 0\n    #for row in rows:\n    #    total = total + row["comment_count"]\n    #print total\n    #result=convertNewsComms(\'812216578849978_812222405516062\')\n    #return result\n    #return response.json(get_og_url(\'http://news.ltn.com.tw/news/opinion/breakingnews/1222089\'))\n\ndef test2():\n    # started_time = datetime.datetime.now()\n    newsbrt = NewsGroup(\'BRT\')\n    # newsbrt.updateAllSocialCount()\n    # ended_time = datetime.datetime.now()\n    # fbdb.event_logs.insert(function=\'updateAllSocialCount\', started_time=started_time, ended_time=ended_time)\n    # fbdb.commit()\n    started_time = datetime.datetime.now()\n    newsbrt.updateAllComments()\n    ended_time = datetime.datetime.now()\n    fbdb.event_logs.insert(function=\'updateAllComments\', started_time=started_time, ended_time=ended_time)\n    fbdb.commit()\n    #test5=getGroupUrlsSocialCount("http://udn.com/news/story/7548/677801,http://news.ltn.com.tw/news/local/paper/852017,http://www.chinatimes.com/newspapers/20150223000068-260210,http://www.appledaily.com.tw/realtimenews/article/new/20150112/540406/,http://www.chinatimes.com/realtimenews/20150223002434-260405")\n    #return str(test5)\n    #newsbrt = NewsGroup(\'BRT\')\n    #return newsbrt.url_list\n\n\ndef commentsByKeywords():\n    key = \'%\xe5\xa5\xb3\xe6\x80\xa7%\'\n    rows = fbdb(fbdb.news.summary.like(key)).select()\n    newslist = []\n    for row in rows:\n        if row["fid"] != None:\n            newslist.append(row["fid"])\n    rows = fbdb(fbdb.news_comments.news_fid.belongs(newslist)).select()\n    comments = []\n    likes = []\n    for row in rows:\n        if row["like_count"] > 10:\n            news = fbdb(fbdb.news.fid == row["news_fid"]).select().first()\n            comments.append(\'news_title:\' + row["news_fid"] + news["title"] + \' like_count:\' + str(\n                row["like_count"]) + \' message: \' + row["message"])\n            likes.append(row["like_count"])\n    likes, comments = [list(x) for x in zip(*sorted(zip(likes, comments), key=itemgetter(0), reverse=True))]\n\n    return dict(comments=comments)\n\n@auth.requires_login()\ndef Socialcount():\n    newsbrt = NewsGroup(\'BRT\')\n    newsbrt.updateAllSocialCount()\n\n    return \'OK\'\n\ndef fix_url():\n    rows = fbdb(fbdb.news_comments.news_fid == None).select()\n    for row in rows:\n        fid = row["fid"]\n        news_fid = fid.split(\'_\')[0]\n        #url = "http://" + urllib.quote(href.split("http://")[1])\n        #og = get_og_url(url)\n        #fid = og["fid"]\n        #fb_url = og["fb_url"]\n\n        row.update_record(news_fid=news_fid)\n\n@auth.requires_login()\ndef update_socialcount():\n    rows = fbdb(fbdb.news.fid <> None).select()\n    test=[]\n    for row in rows:\n        news_object = News(row.href)\n        test.append(news_object.fb_url)\n        news_object.updateSocialCount()\n        \n\n    return test\n\ndef fix_seg():\n    rows = fbdb(fbdb.news_comments.id <> \'\').select()\n    for row in rows:\n        message = row["message"]\n        segment = list(jieba.cut(message))\n        row.update_record(segment=segment)\n\n\ndef kimono_api(url, from_team):\n    response = urllib.urlopen(url)\n    data = json.load(response)\n    updatedtime = parser.parse(data["lastsuccess"]) + timedelta(hours=8)\n    news_array = data["results"]["collection1"]\n    for news in news_array:\n        date_time = news["datetime"]\n        if u\' \xe5\xb0\x8f\xe6\x99\x82\xe5\x89\x8d\' in date_time:\n            hours = int(date_time.strip(u\' \xe5\xb0\x8f\xe6\x99\x82\xe5\x89\x8d\'))\n            date_time = updatedtime - timedelta(hours=hours)\n        elif u\' \xe5\x88\x86\xe9\x90\x98\xe5\x89\x8d\' in date_time:\n            minutes = int(date_time.strip(u\' \xe5\x88\x86\xe9\x90\x98\xe5\x89\x8d\'))\n            date_time = updatedtime - timedelta(minutes=minutes)\n        else:\n            date_time = date_time.replace(u\'\xe5\xb9\xb4\', \'/\').replace(u\'\xe6\x9c\x88\', \'/\').strip(u\'\xe6\x97\xa5\')\n            date_time = parser.parse(date_time) + timedelta(hours=12)\n\n        source = news["source"]\n        summary = news["summary"]\n        title = news["title"]["text"]\n        href = news["title"]["href"]\n        photo = news["photo"]["src"] if \'src\' in news["photo"] else \'\'\n\n        related_news = []\n        related_news_date_time = []\n        related_news_source = []\n\n        # if isinstance(news["related_news_datetime"], list):\n        #     for item in news["related_news_datetime"]:\n        #         if u\' \xe5\xb0\x8f\xe6\x99\x82\xe5\x89\x8d\' in item:\n        #             hours = int(item.strip(u\' \xe5\xb0\x8f\xe6\x99\x82\xe5\x89\x8d\'))\n        #             item = updated_time - timedelta(hours=hours)\n        #             related_news_date_time.append(item)\n        #         elif u\' \xe5\x88\x86\xe9\x90\x98\xe5\x89\x8d\' in item:\n        #             minutes = int(item.strip(u\' \xe5\x88\x86\xe9\x90\x98\xe5\x89\x8d\'))\n        #             item = updated_time - timedelta(minutes=minutes)\n        #             related_news_date_time.append(item)\n        #         else:\n        #             item = item.replace(u\'\xe5\xb9\xb4\', \'/\').replace(u\'\xe6\x9c\x88\', \'/\').strip(u\'\xe6\x97\xa5\')\n        #             item = parser.parse(item) + timedelta(hours=12)\n        #             related_news_date_time.append(item)\n        #     related_news = news["related_news"]\n        #     related_news_source = news["related_news_source"]\n        # elif news["related_news_datetime"] == "":\n        #     pass\n        # else:\n        #     if u\' \xe5\xb0\x8f\xe6\x99\x82\xe5\x89\x8d\' in news["related_news_datetime"]:\n        #         hours = int(news["related_news_datetime"].strip(u\' \xe5\xb0\x8f\xe6\x99\x82\xe5\x89\x8d\'))\n        #         related_news_date_time2 = updated_time - timedelta(hours=hours)\n        #     elif u\' \xe5\x88\x86\xe9\x90\x98\xe5\x89\x8d\' in news["related_news_datetime"]:\n        #         minutes = int(news["related_news_datetime"].strip(u\' \xe5\x88\x86\xe9\x90\x98\xe5\x89\x8d\'))\n        #         related_news_date_time2 = updated_time - timedelta(minutes=minutes)\n        #     else:\n        #         related_news_date_time2 = news["related_news_datetime"].replace(u\'\xe5\xb9\xb4\', \'/\').replace(u\'\xe6\x9c\x88\', \'/\').strip(\n        #             u\'\xe6\x97\xa5\')\n        #         related_news_date_time2 = parser.parse(related_news_date_time2) + timedelta(hours=12)\n        #\n        #     related_news.append(news["related_news"])\n        #     related_news_date_time.append(related_news_date_time2)\n        #     related_news_source.append(news["related_news_source"])\n        if href != \'\':\n            #url = "http://" + urllib.quote(href.split("http://")[1])\n            href = href.strip()\n            url2 = href.split("://")[0] + "://" + urllib.quote(href.split("://")[1])\n            og = get_og_url(url2)\n            # fid = og["fid"]\n            # fb_url = og["fb_url"]\n            # created_time = og["created_time"]\n            # updated_time = og["updated_time"]\n            # share_count = og["share_count"]\n            # comment_count = og["comment_count"]\n            if og["title"] == None:\n                og["title"] = title\n            fbdb.news.update_or_insert(fbdb.news.href==href,from_team=from_team, href=href,summary=summary, source=source, date_time=date_time,  **og)\n            # fbdb.news.update_or_insert(fbdb.news.href==href, fb_url=fb_url, href=href, created_time=created_time,updated_time=updated_time, date_time=date_time, source=source, summary=summary, title=title, photo=photo, related_news=json.dumps(related_news),\n            #                  related_news_date_time=related_news_date_time,\n            #                  related_news_source=json.dumps(related_news_source), from_team=from_team,\n            #                  share_count=share_count, comment_count=comment_count)\n            fbdb.commit()\n\n                #getUrlSocialCount(fb_url)\n\n    return json.dumps(data)\n    #return "Success!"\n    #return dict(message="hello from newsAPI.py")\n\ndef checkDBNewsCommentsFromDate(from_date):\n    from_date = datetime.datetime.strptime(from_date, "%Y/%m/%d")\n    rows = fbdb(fbdb.news.date_time >= from_date).select()\n    for row in rows:\n        ids = row["fid"]\n        if ids != None:\n            #ids = "http://" + urllib.quote(ids.split("http://")[1])\n            from_team = row["from_team"]\n            news_source = row["source"]\n            getNewsComments(ids, from_team, news_source)\n\n@auth.requires_login()\ndef checkDBNewsComments():\n    rows = fbdb((fbdb.news.fid <> None) & (fbdb.news.comment_count > 0)).select()  #\n    for row in rows:\n        ids = row["fid"]\n        href = row["href"]\n        if ids != None:\n            #ids = "http://" + urllib.quote(ids.split("http://")[1])\n            from_team = row["from_team"]\n            news_source = row["source"]\n            getNewsComments(ids, from_team, news_source, href)\n\n    return "Ok"\n\ndef BestComments():\n    stoplist = list(delZhStr)\n    stoplist.extend(stopwords)\n    p_wordclouds = []\n    p_wordcloud = []\n    p_wordclouds2 = []\n\n    male_wordcloud = []\n    female_wordcloud = []\n\n    male_wordclouds = []\n    male_wordclouds_a = []\n    male_wordclouds_n = []\n    male_wordclouds_nr = []\n    male_wordclouds_v = []\n\n    female_wordclouds = []\n    female_wordclouds_a = []\n    female_wordclouds_n = []\n    female_wordclouds_nr = []\n    female_wordclouds_v = []\n\n    male_wordcloud_a = []\n    male_wordcloud_n = []\n    male_wordcloud_nr = []\n    male_wordcloud_v = []\n\n    female_wordcloud_a = []\n    female_wordcloud_n = []\n    female_wordcloud_nr = []\n    female_wordcloud_v = []\n\n    wordcloud_a = []\n    wordcloud_n = []\n    wordcloud_nr = []\n    wordcloud_v = []\n    wordcloud_a2 = []\n    wordcloud_n2 = []\n    wordcloud_nr2 = []\n    wordcloud_v2 = []\n\n    now = datetime.datetime.today()\n    q_time = now - timedelta(days=7)\n    #rows = fbdb((fbdb.news_comments.like_count >= 1)&(fbdb.news_comments.from_team==\'\xe9\x80\xa3\xe5\x8b\x9d\xe6\x96\x87\')&(fbdb.news_comments.created_time >=q_time)).select()\n    rows = fbdb(fbdb.news_comments.id <> \'\').select()\n    for row in rows:\n        #segments = list(set(row[\'segment\']))\n        segments = pseg.cut(row[\'message\'])\n        count = row["like_count"]  #// 10\n        #count= 1\n        wordclouds_a = []\n        wordclouds_n = []\n        wordclouds_nr = []\n        wordclouds_v = []\n        for j in range(0, count):\n            for i in segments:\n                if (i.word not in stoplist):\n                    p_wordclouds2.append(i.word)\n                if (re.search("^a", i.flag) <> None) & (i.word not in stoplist):\n                    wordclouds_a.append(i.word)\n                elif (i.flag == \'n\') & (i.word not in stoplist):\n                    wordclouds_n.append(i.word)\n                elif (i.flag == \'nr\') & (i.word not in stoplist):\n                    wordclouds_nr.append(i.word)\n                elif (re.search("^v", i.flag) <> None) & (i.word not in stoplist):\n                    wordclouds_v.append(i.word)\n        p_wordclouds.extend(p_wordclouds2)\n        userid = row["from_id"]\n        user = fbdb(fbdb.people.uid == userid).select().first()\n        sex = user[\'gender\'] if user else None\n        #likes = row[\'likes\'] if ((\'likes\' in row) & (row[\'likes\'] != None) & (row[\'likes\'] != {})) else []\n        #for like in likes:\n        wordcloud_a2.extend(list(set(wordclouds_a)))\n        wordcloud_n2.extend(list(set(wordclouds_n)))\n        wordcloud_nr2.extend(list(set(wordclouds_nr)))\n        wordcloud_v2.extend(list(set(wordclouds_v)))\n\n        if sex == \'female\':\n            female_wordclouds.extend(list(set(p_wordclouds2)))\n            female_wordclouds_a.extend(list(set(wordclouds_a)))\n            female_wordclouds_n.extend(list(set(wordclouds_n)))\n            female_wordclouds_nr.extend(list(set(wordclouds_nr)))\n            female_wordclouds_v.extend(list(set(wordclouds_v)))\n        elif sex == \'male\':\n            male_wordclouds.extend(list(set(p_wordclouds2)))\n            male_wordclouds_a.extend(list(set(wordclouds_a)))\n            male_wordclouds_n.extend(list(set(wordclouds_n)))\n            male_wordclouds_nr.extend(list(set(wordclouds_nr)))\n            male_wordclouds_v.extend(list(set(wordclouds_v)))\n        else:\n            pass\n    for item in Counter(wordcloud_a2).most_common(150):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        wordcloud_a.append({\'name\': item[0], \'size\': item[1]})\n    for item in Counter(wordcloud_n2).most_common(150):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        wordcloud_n.append({\'name\': item[0], \'size\': item[1]})\n    for item in Counter(wordcloud_nr2).most_common(150):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        wordcloud_nr.append({\'name\': item[0], \'size\': item[1]})\n    for item in Counter(wordcloud_v2).most_common(150):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        wordcloud_v.append({\'name\': item[0], \'size\': item[1]})\n\n    for item in Counter(female_wordclouds).most_common(150):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        female_wordcloud.append({\'name\': item[0], \'size\': item[1]})\n    for item in Counter(male_wordclouds).most_common(150):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        male_wordcloud.append({\'name\': item[0], \'size\': item[1]})\n\n    list_a_female100 = []\n    list_n_female100 = []\n    list_nr_female100 = []\n    list_v_female100 = []\n\n    for item in Counter(female_wordclouds_a).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        female_wordcloud_a.append({\'name\': item[0], \'size\': item[1]})\n        list_a_female100.append(item[0])\n\n    for item in Counter(female_wordclouds_n).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        female_wordcloud_n.append({\'name\': item[0], \'size\': item[1]})\n        list_n_female100.append(item[0])\n\n    for item in Counter(female_wordclouds_nr).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        female_wordcloud_nr.append({\'name\': item[0], \'size\': item[1]})\n        list_nr_female100.append(item[0])\n\n    for item in Counter(female_wordclouds_v).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        female_wordcloud_v.append({\'name\': item[0], \'size\': item[1]})\n        list_v_female100.append(item[0])\n\n    list_a_male100 = []\n    list_n_male100 = []\n    list_nr_male100 = []\n    list_v_male100 = []\n\n    for item in Counter(male_wordclouds_a).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        male_wordcloud_a.append({\'name\': item[0], \'size\': item[1]})\n        list_a_male100.append(item[0])\n\n    for item in Counter(male_wordclouds_n).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        male_wordcloud_n.append({\'name\': item[0], \'size\': item[1]})\n        list_n_male100.append(item[0])\n\n    for item in Counter(male_wordclouds_nr).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        male_wordcloud_nr.append({\'name\': item[0], \'size\': item[1]})\n        list_nr_male100.append(item[0])\n\n    for item in Counter(male_wordclouds_v).most_common(100):\n        #s = SnowNLP(item[0]) , \'tag\': s.tags\n        male_wordcloud_v.append({\'name\': item[0], \'size\': item[1]})\n        list_v_male100.append(item[0])\n\n    female_wordcloud_a_special = []\n    female_wordcloud_n_special = []\n    female_wordcloud_nr_special = []\n    female_wordcloud_v_special = []\n\n    for item in Counter(female_wordclouds_a).most_common(100):\n        if item[0] not in list_a_male100:\n            female_wordcloud_a_special.append({\'name\': item[0], \'size\': item[1]})\n\n    for item in Counter(female_wordclouds_n).most_common(100):\n        if item[0] not in list_n_male100:\n            female_wordcloud_n_special.append({\'name\': item[0], \'size\': item[1]})\n\n    for item in Counter(female_wordclouds_nr).most_common(100):\n        if item[0] not in list_nr_male100:\n            female_wordcloud_nr_special.append({\'name\': item[0], \'size\': item[1]})\n\n    for item in Counter(female_wordclouds_v).most_common(100):\n        if item[0] not in list_v_male100:\n            female_wordcloud_v_special.append({\'name\': item[0], \'size\': item[1]})\n\n    male_wordcloud_a_special = []\n    male_wordcloud_n_special = []\n    male_wordcloud_nr_special = []\n    male_wordcloud_v_special = []\n\n    for item in Counter(male_wordclouds_a).most_common(100):\n        if item[0] not in list_a_female100:\n            male_wordcloud_a_special.append({\'name\': item[0], \'size\': item[1]})\n\n    for item in Counter(male_wordclouds_n).most_common(100):\n        if item[0] not in list_n_female100:\n            male_wordcloud_n_special.append({\'name\': item[0], \'size\': item[1]})\n\n    for item in Counter(male_wordclouds_nr).most_common(100):\n        if item[0] not in list_nr_female100:\n            male_wordcloud_nr_special.append({\'name\': item[0], \'size\': item[1]})\n\n    for item in Counter(male_wordclouds_v).most_common(100):\n        if item[0] not in list_v_female100:\n            male_wordcloud_v_special.append({\'name\': item[0], \'size\': item[1]})\n\n    flare = {}\n    flare = {"name": "flare", "children": [{"name": "female_wordcloud",\n                                            "children": [{"name": "adj", "children": female_wordcloud_a_special},\n                                                         {"name": "v", "children": female_wordcloud_v_special},\n                                                         {"name": "nr", "children": female_wordcloud_nr_special},\n                                                         {"name": "n", "children": female_wordcloud_n_special}]}]}\n\n    f = open(os.path.join(request.folder,\'private\',\'d3\',\'BestComments_female.json\'), \'w+\')\n    f.write(json.dumps(flare, sort_keys=False, separators=(\',\', \':\'), indent=4))\n    f.close()\n    flare = {}\n    flare = {"name": "flare", "children": [{"name": "male_wordcloud",\n                                            "children": [{"name": "adj", "children": male_wordcloud_a_special},\n                                                         {"name": "v", "children": male_wordcloud_v_special},\n                                                         {"name": "nr", "children": male_wordcloud_nr_special},\n                                                         {"name": "n", "children": male_wordcloud_n_special}]}]}\n    f = open(os.path.join(request.folder,\'private\',\'d3\',\'BestComments_male.json\'), \'w+\')\n    f.write(json.dumps(flare, sort_keys=False, separators=(\',\', \':\'), indent=4))\n    f.close()\n\n    flare = {}\n    flare = {"name": "flare", "children": [{"name": "wordcloud", "children": [{"name": "adj", "children": wordcloud_a},\n                                                                              {"name": "v", "children": wordcloud_v},\n                                                                              {"name": "nr", "children": wordcloud_nr},\n                                                                              {"name": "n", "children": wordcloud_n}]}]}\n    f = open(os.path.join(request.folder,\'private\',\'d3\',\'BestComments.json\'), \'w+\')\n    f.write(json.dumps(flare, sort_keys=False, separators=(\',\', \':\'), indent=4))\n    f.close()\n\n    f = codecs.open(os.path.join(request.folder,\'private\',\'d3\',\'wordcloud.txt\'), \'w+\', \'utf-8\')\n    for item in list(set(p_wordclouds)):\n        f.write(item + \'\\n\')\n    f.close()\n\n    return dict(message="OK")\n    #return len(rows)\n    #return json.dumps(female_wordclouds_nr)\n\ndef ConvertComments():\n    rows = fbdb(fbdb.news_comments.comments <> None).select()  #\n    for row in rows:\n        convertNewsComms(row["fid"])\n\ndef delay():\n    time.sleep(1.5)\n\nresponse._vars=response._caller(test2)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'urllib2'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of URLError object>"
p15
sS'__str__'
p16
S"<bound method URLError.__str__ of URLError(error(54, 'Connection reset by peer'),)>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of URLError object>'
p19
sS'__dict__'
p20
S"{'reason': error(54, 'Connection reset by peer')}"
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of URLError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<bound method URLError.__init__ of URLError(error(54, 'Connection reset by peer'),)>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of URLError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of URLError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'errno'
p34
S'None'
p35
sS'__format__'
p36
S'<built-in method __format__ of URLError object>'
p37
sS'__class__'
p38
S"<class 'urllib2.URLError'>"
p39
sS'filename'
p40
S'None'
p41
sS'__doc__'
p42
S'None'
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of URLError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of URLError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of URLError object>"
p49
sS'args'
p50
S"(error(54, 'Connection reset by peer'),)"
p51
sS'reason'
p52
S"error(54, 'Connection reset by peer')"
p53
sS'__subclasshook__'
p54
S'<built-in method __subclasshook__ of type object>'
p55
sS'__unicode__'
p56
S'<built-in method __unicode__ of URLError object>'
p57
sS'strerror'
p58
S'None'
p59
sS'__delattr__'
p60
S"<method-wrapper '__delattr__' of URLError object>"
p61
sS'__repr__'
p62
S"<method-wrapper '__repr__' of URLError object>"
p63
sS'__hash__'
p64
S"<method-wrapper '__hash__' of URLError object>"
p65
ssS'evalue'
p66
S'<urlopen error [Errno 54] Connection reset by peer>'
p67
sS'request'
p68
cgluon.html
XML_unpickle
p69
(S's\xb2K\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>fbBrt</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>newsAPI</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-us</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>localhost:8088</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/600.3.18 (KHTML, like Gecko) Version/8.0.3 Safari/600.3.18</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/fbBrt/newsAPI/test2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>56244</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>maclogair.local</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8088</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Users/logyuan/Documents/web2py/applications/fbBrt/&#x27;, &#x27;/Users/logyuan/Documents/web2py/applications/fbbrt/&#x27;, &#x27;/Users/logyuan/Documents/web2py/applications/admin/&#x27;, &#x27;/Users/logyuan/Documents/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/logyuan/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x110c9e4d0: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;192.168.2.1&#x27;, &#x27;fe80::60c:ceff:fee3:df4a%en0&#x27;, &#x27;10.37.129.2&#x27;, &#x27;fe80::40c:ceff:fe3e:b700%bridge0&#x27;, &#x27;10.211.55.2&#x27;, &#x27;192.168.1.111&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;maclogair.local&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Users/logyuan/Documents/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/logyuan/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-us</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>localhost:8088</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/600.3.18 (KHTML, like Gecko) Version/8.0.3 Safari/600.3.18</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>192.168.2.1</div></td></tr><tr><td><div>fe80::60c:ceff:fee3:df4a%en0</div></td></tr><tr><td><div>fe80::40c:ceff:fe3e:b700%bridge0</div></td></tr><tr><td><div>10.37.129.2</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>10.211.55.2</div></td></tr><tr><td><div>192.168.1.111</div></td></tr><tr><td><div>maclogair.local</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/fbBrt/newsAPI/test2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>56244</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/fbBrt/newsAPI/test2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>maclogair.local</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8088</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/Users/logyuan/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.5-stable+timestamp.2014.03.20.22.57.13</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x10f0771e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x110c27870&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x16d6dd9d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x10f0771e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x110c27870&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x16d6dd9d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/Users/logyuan/Documents/web2py/applications/fbBrt/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>test2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Users/logyuan/Documents/web2py/applications/fbBrt/&#x27;, &#x27;/Users/logyuan/Documents/web2py/applications/fbbrt/&#x27;, &#x27;/Users/logyuan/Documents/web2py/applications/admin/&#x27;, &#x27;/Users/logyuan/Documents/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/logyuan/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x110c9e4d0: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;192.168.2.1&#x27;, &#x27;fe80::60c:ceff:fee3:df4a%en0&#x27;, &#x27;10.37.129.2&#x27;, &#x27;fe80::40c:ceff:fe3e:b700%bridge0&#x27;, &#x27;10.211.55.2&#x27;, &#x27;192.168.1.111&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;maclogair.local&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Users/logyuan/Documents/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/logyuan/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>192.168.2.1</div></td></tr><tr><td><div>fe80::60c:ceff:fee3:df4a%en0</div></td></tr><tr><td><div>fe80::40c:ceff:fe3e:b700%bridge0</div></td></tr><tr><td><div>10.37.129.2</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>10.211.55.2</div></td></tr><tr><td><div>192.168.1.111</div></td></tr><tr><td><div>maclogair.local</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.5-stable+timestamp.2014.03.20.22.57.13</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 3, 6, 13, 41, 44, 221215)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/fbBrt/newsAPI/test2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2015, 3, 6, 5, 41, 44, 223690)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>fbBrt/127.0.0.1.2015-03-06.13-41-44.63daed05-c654-473c-a846-c3114469faa5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x1633c9c10&gt;</div></td></tr></table></div>'
tRp70
sS'frames'
p71
(lp72
(dp73
S'file'
p74
S'/Users/logyuan/Documents/web2py/gluon/restricted.py'
p75
sS'dump'
p76
(dp77
S'environment'
p78
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'BestComments': <function BestComments>, 'CAT': <class 'gluon.html.CAT'>, ...}"
p79
sS'ccode'
p80
S'<code object <module> at 0x1674abab0, file "/Use...plications/fbBrt/controllers/newsAPI.py", line 3>'
p81
ssS'lnum'
p82
I220
sS'lines'
p83
(dp84
I224
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p85
sI215
S'    try:'
p86
sI216
S'        if isinstance(code, types.CodeType):'
p87
sI217
S'            ccode = code'
p88
sI218
S'        else:'
p89
sI219
S'            ccode = compile2(code, layer)'
p90
sI220
S'        exec ccode in environment'
p91
sI221
S'    except HTTP:'
p92
sI222
S'        raise'
p93
sI223
S'    except RestrictedError:'
p94
ssS'call'
p95
S"(code='# coding: utf8\\n# try something like\\nimport urlli...eep(1.5)\\n\\nresponse._vars=response._caller(test2)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'BestComments': <function BestComments>, 'CAT': <class 'gluon.html.CAT'>, ...}, layer='/Users/logyuan/Documents/web2py/applications/fbBrt/controllers/newsAPI.py')"
p96
sS'func'
p97
S'restricted'
p98
sa(dp99
g74
S'/Users/logyuan/Documents/web2py/applications/fbBrt/controllers/newsAPI.py'
p100
sg76
(dp101
sg82
I545
sg83
(dp102
I534
S'    #return len(rows)'
p103
sI535
S'    #return json.dumps(female_wordclouds_nr)'
p104
sI536
S''
sI537
S'def ConvertComments():'
p105
sI538
S'    rows = fbdb(fbdb.news_comments.comments <> None).select()  #'
p106
sI539
S'    for row in rows:'
p107
sI540
S'        convertNewsComms(row["fid"])'
p108
sI541
S''
sI542
S'def delay():'
p109
sI543
S'    time.sleep(1.5)'
p110
ssg95
S'()'
p111
sg97
S'<module>'
p112
sa(dp113
g74
S'/Users/logyuan/Documents/web2py/gluon/globals.py'
p114
sg76
(dp115
S'self'
p116
S'undefined'
p117
sS'f'
S'<function test2>'
p118
ssg82
I385
sg83
(dp119
I384
S'        self._vars = None'
p120
sI385
S'        self._caller = lambda f: f()'
p121
sI386
S'        self._view_environment = None'
p122
sI387
S'        self._custom_commit = None'
p123
sI388
S'        self._custom_rollback = None'
p124
sI389
S''
sI380
S'        self.menu = []             # used by the default view layout'
p125
sI381
S'        self.files = []            # used by web2py_ajax.html'
p126
sI382
S'        self.generic_patterns = []  # patterns to allow generic views'
p127
sI383
S"        self.delimiters = ('{{', '}}')"
p128
ssg95
S'(f=<function test2>)'
p129
sg97
S'<lambda>'
p130
sa(dp131
g74
S'/Users/logyuan/Documents/web2py/applications/fbBrt/controllers/newsAPI.py'
p132
sg76
(dp133
S'newsbrt.updateAllComments'
p134
S'<bound method NewsGroup.updateAllComments of <__restricted__.NewsGroup instance>>'
p135
sS'newsbrt'
p136
S'<__restricted__.NewsGroup instance>'
p137
ssg82
I116
sg83
(dp138
I111
S'    # newsbrt.updateAllSocialCount()'
p139
sI112
S'    # ended_time = datetime.datetime.now()'
p140
sI113
S"    # fbdb.event_logs.insert(function='updateAllSocialCount', started_time=started_time, ended_time=ended_time)"
p141
sI114
S'    # fbdb.commit()'
p142
sI115
S'    started_time = datetime.datetime.now()'
p143
sI116
S'    newsbrt.updateAllComments()'
p144
sI117
S'    ended_time = datetime.datetime.now()'
p145
sI118
S"    fbdb.event_logs.insert(function='updateAllComments', started_time=started_time, ended_time=ended_time)"
p146
sI119
S'    fbdb.commit()'
p147
sI120
S'    #test5=getGroupUrlsSocialCount("http://udn.com/news/story/7548/677801,http://news.ltn.com.tw/news/local/paper/852017,http://www.chinatimes.com/newspapers/20150223000068-260210,http://www.appledaily.com.tw/realtimenews/article/new/20150112/540406/,http://www.chinatimes.com/realtimenews/20150223002434-260405")'
p148
ssg95
S'()'
p149
sg97
S'test2'
p150
sa(dp151
g74
S'/Users/logyuan/Documents/web2py/applications/fbBrt/models/graph.py'
p152
sg76
(dp153
S'fids'
p154
S"'1016340705062516,600808040019726,920301688010698...4,724865657627709,680501485380396,776344072449017'"
p155
sS'global getGroupNewsComment'
p156
S'<function getGroupNewsComment>'
p157
ssg82
I605
sg83
(dp158
I608
S'        getGroupNewsComment(fids)'
p159
sI609
S'        return None'
p160
sI600
S''
sI601
S'    def updateAllComments(self):'
p161
sI602
S"        fids = ''"
p162
sI603
S'        for fid in self.hasComment_fids_list:'
p163
sI604
S"            if len(fids.split(',')) >=50:"
p164
sI605
S'                getGroupNewsComment(fids)'
p165
sI606
S"                fids = ''"
p166
sI607
S'            fids = fids + \',\' + fid["fid"] if len(fids) <> 0 else fid["fid"]'
p167
ssg95
S'(self=<__restricted__.NewsGroup instance>)'
p168
sg97
S'updateAllComments'
p169
sa(dp170
g74
S'/Users/logyuan/Documents/web2py/applications/fbBrt/models/graph.py'
p171
sg76
(dp172
S'fids'
p173
S"'1016340705062516,600808040019726,920301688010698...4,724865657627709,680501485380396,776344072449017'"
p174
sS'graph'
p175
S'<facebook.GraphAPI object>'
p176
sS'args'
p177
g117
sS'graph.request'
p178
S'<bound method GraphAPI.request of <facebook.GraphAPI object>>'
p179
sS'results'
p180
g117
ssg82
I1806
sg83
(dp181
I1801
S'    #com = fbdb(fbdb.news_comments.fid == fid).select().first()'
p182
sI1802
S"    r_message = ''"
p183
sI1803
S'    #if com == None:'
p184
sI1804
S'    try:'
p185
sI1805
S'        graph = getGraph()'
p186
sI1806
S"        results = graph.request('comments/', args={'ids': fids,'fields':'likes.limit(1000),comments.limit(1000),message,from,id,like_count,created_time,parent,comment_count'})"
p187
sI1807
S'        print results'
p188
sI1808
S'        delay()'
p189
sI1809
S'        for fid,posts in results.items():'
p190
sI1810
S'            row = fbdb(fbdb.news.fid == fid).select().first()'
p191
ssg95
S"(fids='1016340705062516,600808040019726,920301688010698...4,724865657627709,680501485380396,776344072449017')"
p192
sg97
S'getGroupNewsComment'
p193
sa(dp194
g74
S'/usr/local/lib/python2.7/site-packages/facebook.py'
p195
sg76
(dp196
S'self.timeout'
p197
S'None'
p198
sS'global urllib'
p199
S"<module 'urllib' from '/usr/local/Cellar/python/...framework/Versions/2.7/lib/python2.7/urllib.pyc'>"
p200
sS'urllib.urlencode'
p201
S'<function urlencode>'
p202
sS'self'
p203
S'<facebook.GraphAPI object>'
p204
sS'args'
p205
S"{'fields': 'likes.limit(1000),comments.limit(1000),message,from,id,like_count,created_time,parent,comment_count', 'ids': '1016340705062516,600808040019726,920301688010698...4,724865657627709,680501485380396,776344072449017'}"
p206
sS'post_data'
p207
S'None'
p208
sS'timeout'
p209
g117
ssg82
I295
sg83
(dp210
I290
S'            else:'
p211
sI291
S'                args["access_token"] = self.access_token'
p212
sI292
S'        post_data = None if post_args is None else urllib.urlencode(post_args)'
p213
sI293
S'        try:'
p214
sI294
S'            file = urllib2.urlopen("https://graph.facebook.com/" + path + "?" +'
p215
sI295
S'                    urllib.urlencode(args), post_data, timeout=self.timeout)'
p216
sI296
S'        except urllib2.HTTPError, e:'
p217
sI297
S'            response = _parse_json(e.read())'
p218
sI298
S'            raise GraphAPIError(response)'
p219
sI299
S'        except TypeError:'
p220
ssg95
S"(self=<facebook.GraphAPI object>, path='comments/', args={'fields': 'likes.limit(1000),comments.limit(1000),message,from,id,like_count,created_time,parent,comment_count', 'ids': '1016340705062516,600808040019726,920301688010698...4,724865657627709,680501485380396,776344072449017'}, post_args=None)"
p221
sg97
g68
sa(dp222
g74
S'/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py'
p223
sg76
(dp224
S'_opener.open'
p225
S'<bound method OpenerDirector.open of <urllib2.OpenerDirector instance>>'
p226
sS'url'
p227
S"'https://graph.facebook.com/comments/?fields=like...4865657627709%2C680501485380396%2C776344072449017'"
p228
sS'data'
p229
S'None'
p230
sS'global _opener'
p231
S'<urllib2.OpenerDirector instance>'
p232
sS'timeout'
p233
S'None'
p234
ssg82
I127
sg83
(dp235
I128
S''
sI129
S'def install_opener(opener):'
p236
sI130
S'    global _opener'
p237
sI131
S'    _opener = opener'
p238
sI122
S'_opener = None'
p239
sI123
S'def urlopen(url, data=None, timeout=socket._GLOBAL_DEFAULT_TIMEOUT):'
p240
sI124
S'    global _opener'
p241
sI125
S'    if _opener is None:'
p242
sI126
S'        _opener = build_opener()'
p243
sI127
S'    return _opener.open(url, data, timeout)'
p244
ssg95
S"(url='https://graph.facebook.com/comments/?fields=like...4865657627709%2C680501485380396%2C776344072449017', data=None, timeout=None)"
p245
sg97
S'urlopen'
p246
sa(dp247
g74
S'/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py'
p248
sg76
(dp249
S'self'
p250
S'<urllib2.OpenerDirector instance>'
p251
sS'req'
p252
S'<urllib2.Request instance>'
p253
sS'data'
p254
S'None'
p255
sS'response'
p256
g117
sS'self._open'
p257
S'<bound method OpenerDirector._open of <urllib2.OpenerDirector instance>>'
p258
ssg82
I404
sg83
(dp259
I399
S'        meth_name = protocol+"_request"'
p260
sI400
S'        for processor in self.process_request.get(protocol, []):'
p261
sI401
S'            meth = getattr(processor, meth_name)'
p262
sI402
S'            req = meth(req)'
p263
sI403
S''
sI404
S'        response = self._open(req, data)'
p264
sI405
S''
sI406
S'        # post-process response'
p265
sI407
S'        meth_name = protocol+"_response"'
p266
sI408
S'        for processor in self.process_response.get(protocol, []):'
p267
ssg95
S"(self=<urllib2.OpenerDirector instance>, fullurl='https://graph.facebook.com/comments/?fields=like...4865657627709%2C680501485380396%2C776344072449017', data=None, timeout=None)"
p268
sg97
S'open'
p269
sa(dp270
g74
S'/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py'
p271
sg76
(dp272
S'req'
p273
S'<urllib2.Request instance>'
p274
ssg82
I422
sg83
(dp275
I417
S'        if result:'
p276
sI418
S'            return result'
p277
sI419
S''
sI420
S'        protocol = req.get_type()'
p278
sI421
S'        result = self._call_chain(self.handle_open, protocol, protocol +'
p279
sI422
S"                                  '_open', req)"
p280
sI423
S'        if result:'
p281
sI424
S'            return result'
p282
sI425
S''
sI426
S"        return self._call_chain(self.handle_open, 'unknown',"
p283
ssg95
S'(self=<urllib2.OpenerDirector instance>, req=<urllib2.Request instance>, data=None)'
p284
sg97
S'_open'
p285
sa(dp286
g74
S'/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py'
p287
sg76
(dp288
S'args'
p289
S'(<urllib2.Request instance>,)'
p290
sS'result'
p291
g117
sS'func'
p292
S'<bound method HTTPSHandler.https_open of <urllib2.HTTPSHandler instance>>'
p293
ssg82
I382
sg83
(dp294
I384
S'                return result'
p295
sI385
S''
sI386
S'    def open(self, fullurl, data=None, timeout=socket._GLOBAL_DEFAULT_TIMEOUT):'
p296
sI377
S'        # could.  Otherwise, they return the response.'
p297
sI378
S'        handlers = chain.get(kind, ())'
p298
sI379
S'        for handler in handlers:'
p299
sI380
S'            func = getattr(handler, meth_name)'
p300
sI381
S''
sI382
S'            result = func(*args)'
p301
sI383
S'            if result is not None:'
p302
ssg95
S"(self=<urllib2.OpenerDirector instance>, chain={'file': [<urllib2.FileHandler instance>], 'ftp': [<urllib2.FTPHandler instance>], 'http': [<urllib2.HTTPHandler instance>], 'https': [<urllib2.HTTPSHandler instance>], 'unknown': [<urllib2.UnknownHandler instance>]}, kind='https', meth_name='https_open', *args=(<urllib2.Request instance>,))"
p303
sg97
S'_call_chain'
p304
sa(dp305
g74
S'/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py'
p306
sg76
(dp307
S'self'
p308
S'<urllib2.HTTPSHandler instance>'
p309
sS'req'
p310
S'<urllib2.Request instance>'
p311
sS'global httplib'
p312
S"<module 'httplib' from '/usr/local/Cellar/python...ramework/Versions/2.7/lib/python2.7/httplib.pyc'>"
p313
sS'self.do_open'
p314
S'<bound method HTTPSHandler.do_open of <urllib2.HTTPSHandler instance>>'
p315
sS'httplib.HTTPSConnection'
p316
S'<class httplib.HTTPSConnection>'
p317
ssg82
I1222
sg83
(dp318
I1217
S''
sI1218
S"if hasattr(httplib, 'HTTPS'):"
p319
sI1219
S'    class HTTPSHandler(AbstractHTTPHandler):'
p320
sI1220
S''
sI1221
S'        def https_open(self, req):'
p321
sI1222
S'            return self.do_open(httplib.HTTPSConnection, req)'
p322
sI1223
S''
sI1224
S'        https_request = AbstractHTTPHandler.do_request_'
p323
sI1225
S''
sI1226
S'class HTTPCookieProcessor(BaseHandler):'
p324
ssg95
S'(self=<urllib2.HTTPSHandler instance>, req=<urllib2.Request instance>)'
p325
sg97
S'https_open'
p326
sa(dp327
g74
S'/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py'
p328
sg76
(dp329
S'err'
p330
S"error(54, 'Connection reset by peer')"
p331
sS'global URLError'
p332
S"<class 'urllib2.URLError'>"
p333
ssg82
I1184
sg83
(dp334
I1184
S'            raise URLError(err)'
p335
sI1185
S'        else:'
p336
sI1186
S'            try:'
p337
sI1187
S'                r = h.getresponse(buffering=True)'
p338
sI1188
S'            except TypeError: # buffering kw not supported'
p339
sI1179
S''
sI1180
S'        try:'
p340
sI1181
S'            h.request(req.get_method(), req.get_selector(), req.data, headers)'
p341
sI1182
S'        except socket.error, err: # XXX what error?'
p342
sI1183
S'            h.close()'
p343
ssg95
S'(self=<urllib2.HTTPSHandler instance>, http_class=<class httplib.HTTPSConnection>, req=<urllib2.Request instance>)'
p344
sg97
S'do_open'
p345
sasS'pyver'
p346
S'Python 2.7.7: /usr/local/opt/python/bin/python2.7 (prefix: /usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7)'
p347
sS'session'
p348
g69
(S's\x9c\x00\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">token</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr></table></div>'
tRp349
sS'etype'
p350
S"<class 'urllib2.URLError'>"
p351
sS'date'
p352
S'Fri Mar  6 13:42:05 2015'
p353
sS'response'
p354
g69
(S'sb"\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x1633a5dc0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_fbbrt</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-ace12d47-ab1e-4944-b6c5-f079b48172ff<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="brand" href="http://www.web2py.com/"><b>web<span>2</span>py</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>BRT\xe6\x96\xb0\xe8\x81\x9e</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/display_news</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>\xe5\x8d\xb3\xe6\x99\x82\xe6\x96\xb0\xe8\x81\x9e</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/realtime_news</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>\xe6\x9c\xac\xe9\x80\xb1\xe6\x9c\x80\xe7\x86\xb1\xe9\x96\x80</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/Hottest_news</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>\xe6\xad\xb7\xe5\x8f\xb2\xe6\x96\xb0\xe8\x81\x9e\xe6\x8e\x92\xe5\x90\x8d</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/History_news</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>\xe7\xb6\xb2\xe5\x8f\x8b</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/display_people</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>\xe6\x9c\x80\xe6\x96\xb0\xe5\x9b\x9e\xe8\xa6\x86</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/addPeople</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Page</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/display_page</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Page Count</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/index</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Add Page</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/addPage</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Post</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/display_post</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Add Post</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbBrt/default/addpost</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^newsAPI/\\w+\\.py$</div></td></tr><tr><td><div>^newsAPI/test2/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_fbbrt</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/Users/logyuan/Documents/web2py/applications/fbBrt/sessions/127.0.0.1-ace12d47-ab1e-4944-b6c5-f079b48172ff</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>106f4c22ca06cc343e42b73a0d8492f6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-ace12d47-ab1e-4944-b6c5-f079b48172ff</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_fbbrt</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>fbBrt</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div>customize me!</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Fbbrt</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>newsAPI/test2.html</div></td></tr></table></div>'
tRp355
sS'locals'
p356
(dp357
S'err'
p358
S"error(54, 'Connection reset by peer')"
p359
sS'h'
S'<httplib.HTTPSConnection instance>'
p360
sS'self'
p361
S'<urllib2.HTTPSHandler instance>'
p362
sS'req'
p363
S'<urllib2.Request instance>'
p364
sS'headers'
p365
S"{'Connection': 'close', 'Host': 'graph.facebook.com', 'User-Agent': 'Python-urllib/2.7'}"
p366
sS'host'
p367
S"'graph.facebook.com'"
p368
sS'http_class'
p369
S'<class httplib.HTTPSConnection>'
p370
sssS'traceback'
p371
S'Traceback (most recent call last):\n  File "/Users/logyuan/Documents/web2py/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/Users/logyuan/Documents/web2py/applications/fbBrt/controllers/newsAPI.py", line 545, in <module>\n  File "/Users/logyuan/Documents/web2py/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/logyuan/Documents/web2py/applications/fbBrt/controllers/newsAPI.py", line 116, in test2\n    newsbrt.updateAllComments()\n  File "/Users/logyuan/Documents/web2py/applications/fbBrt/models/graph.py", line 605, in updateAllComments\n    getGroupNewsComment(fids)\n  File "/Users/logyuan/Documents/web2py/applications/fbBrt/models/graph.py", line 1806, in getGroupNewsComment\n    results = graph.request(\'comments/\', args={\'ids\': fids,\'fields\':\'likes.limit(1000),comments.limit(1000),message,from,id,like_count,created_time,parent,comment_count\'})\n  File "/usr/local/lib/python2.7/site-packages/facebook.py", line 295, in request\n    urllib.urlencode(args), post_data, timeout=self.timeout)\n  File "/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py", line 127, in urlopen\n    return _opener.open(url, data, timeout)\n  File "/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py", line 404, in open\n    response = self._open(req, data)\n  File "/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py", line 422, in _open\n    \'_open\', req)\n  File "/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py", line 382, in _call_chain\n    result = func(*args)\n  File "/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py", line 1222, in https_open\n    return self.do_open(httplib.HTTPSConnection, req)\n  File "/usr/local/Cellar/python/2.7.7_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py", line 1184, in do_open\n    raise URLError(err)\nURLError: <urlopen error [Errno 54] Connection reset by peer>\n'
p372
s.